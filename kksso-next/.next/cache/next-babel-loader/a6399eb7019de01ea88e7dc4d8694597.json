{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/components/StudioCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\"; // import { useHover } from \"react-use\";\n\nimport ProgressiveImage from \"react-progressive-image\";\nimport moment from \"moment\";\nimport { Disc, Hash } from \"react-feather\";\nimport styles from \"./index.module.scss\"; // function useHover() {\n//   const [value, setValue] = useState(false);\n//   const ref = useRef(null);\n//   const handleMouseOver = () => setValue(true);\n//   const handleMouseOut = () => setValue(false);\n//   useEffect(\n//     () => {\n//       const node = ref.current;\n//       if (ref && node) {\n//         node.addEventListener(\"mouseover\", handleMouseOver);\n//         node.addEventListener(\"mouseout\", handleMouseOut);\n//         return () => {\n//           node.removeEventListener(\"mouseover\", handleMouseOver);\n//           node.removeEventListener(\"mouseout\", handleMouseOut);\n//         };\n//       }\n//     },\n//     [ref.current] // Recall only if ref changes\n//   );\n//   return [ref, value];\n// }\n\nvar StudioCard = function StudioCard(_ref) {\n  _s();\n\n  var _ref$studio = _ref.studio,\n      id = _ref$studio.id,\n      artist = _ref$studio.artist,\n      city = _ref$studio.city,\n      artStyles = _ref$studio.styles,\n      dates = _ref$studio.dates,\n      textMini = _ref$studio.textMini;\n  var router = useRouter();\n  var articleLink = {\n    pathname: \"/studio/[slug]\",\n    query: {\n      slug: id\n    }\n  };\n\n  var openArticle = function openArticle(id) {\n    router.push(articleLink);\n  };\n\n  var _useState = useState(\"0\"),\n      hoverImg = _useState[0],\n      setHoverImg = _useState[1];\n\n  var _useState2 = useState(false),\n      hoveredImg = _useState2[0],\n      setHoveredImg = _useState2[1];\n\n  var teaserSrc = \"/img/\".concat(artist, \"/\").concat(hoverImg, \".jpg\"); // const [hoverRef, isHovered] = useHover();\n  // const [burnsGallery, hovered] = useHover(element);\n\n  function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  } // useEffect(() => {\n  //   console.log(hoveredImg);\n  // if (isHovered) {\n  //   sleep(2000).then(() => {\n  //     setHoverImg((hoverImg + 1) % 3);\n  //     console.log(hoverImg);\n  //     console.log(teaserSrc);\n  //   });\n  // }\n  // }, [hoveredImg]);\n\n\n  return __jsx(\"div\", {\n    className: styles.StudioCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.imgContainer,\n    onMouseEnter: function onMouseEnter() {\n      setHoveredImg(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      setHoveredImg(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: articleLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(ProgressiveImage, {\n    src: teaserSrc,\n    placeholder: \"/img/loader.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, function (src, loading) {\n    return __jsx(\"img\", {\n      className: styles.cardImg,\n      onClick: function onClick() {\n        return openArticle(id);\n      },\n      src: src,\n      alt: artist,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    });\n  }))), __jsx(\"h4\", {\n    className: styles.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, artist), __jsx(\"h4\", {\n    className: styles.secondary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(Disc, {\n    className: styles.Icon,\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#4b4b4b\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), \" \", city), dates && __jsx(\"h4\", {\n    className: styles.secondary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Next Visit\", \" \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, moment(dates[0].toDate(), \"DD/MM/YYYY hh:mm\").format(\"D MMM\"))), __jsx(\"p\", {\n    className: styles.textMini,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, textMini), artStyles && __jsx(\"h4\", {\n    className: styles.secondary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(Hash, {\n    className: styles.Icon,\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#4b4b4b\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), \" \", artStyles));\n};\n\n_s(StudioCard, \"wI8NHaJvBNN0V/lmQ+Yf5BL03BU=\", false, function () {\n  return [useRouter];\n});\n\n_c = StudioCard;\nStudioCard.propTypes = {\n  studio: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    artist: PropTypes.string.isRequired,\n    dates: PropTypes.array.isRequired,\n    city: PropTypes.string.isRequired,\n    styles: PropTypes.string.isRequired,\n    textMini: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default StudioCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudioCard\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/components/StudioCard/index.js"],"names":["useState","useEffect","useRef","PropTypes","useRouter","Link","ProgressiveImage","moment","Disc","Hash","styles","StudioCard","studio","id","artist","city","artStyles","dates","textMini","router","articleLink","pathname","query","slug","openArticle","push","hoverImg","setHoverImg","hoveredImg","setHoveredImg","teaserSrc","sleep","ms","Promise","resolve","setTimeout","imgContainer","src","loading","cardImg","primary","secondary","Icon","toDate","format","propTypes","shape","string","isRequired","array"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\n// import { useHover } from \"react-use\";\n\nimport ProgressiveImage from \"react-progressive-image\";\nimport moment from \"moment\";\n\nimport { Disc, Hash } from \"react-feather\";\n\nimport styles from \"./index.module.scss\";\n\n// function useHover() {\n//   const [value, setValue] = useState(false);\n\n//   const ref = useRef(null);\n\n//   const handleMouseOver = () => setValue(true);\n//   const handleMouseOut = () => setValue(false);\n\n//   useEffect(\n//     () => {\n//       const node = ref.current;\n//       if (ref && node) {\n//         node.addEventListener(\"mouseover\", handleMouseOver);\n//         node.addEventListener(\"mouseout\", handleMouseOut);\n\n//         return () => {\n//           node.removeEventListener(\"mouseover\", handleMouseOver);\n//           node.removeEventListener(\"mouseout\", handleMouseOut);\n//         };\n//       }\n//     },\n//     [ref.current] // Recall only if ref changes\n//   );\n\n//   return [ref, value];\n// }\n\nconst StudioCard = ({\n  studio: { id, artist, city, styles: artStyles, dates, textMini },\n}) => {\n  const router = useRouter();\n\n  const articleLink = {\n    pathname: \"/studio/[slug]\",\n    query: { slug: id },\n  };\n\n  const openArticle = (id) => {\n    router.push(articleLink);\n  };\n\n  const [hoverImg, setHoverImg] = useState(\"0\");\n  const [hoveredImg, setHoveredImg] = useState(false);\n\n  const teaserSrc = `/img/${artist}/${hoverImg}.jpg`;\n\n  // const [hoverRef, isHovered] = useHover();\n\n  // const [burnsGallery, hovered] = useHover(element);\n\n  function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  // useEffect(() => {\n  //   console.log(hoveredImg);\n\n  // if (isHovered) {\n  //   sleep(2000).then(() => {\n  //     setHoverImg((hoverImg + 1) % 3);\n  //     console.log(hoverImg);\n  //     console.log(teaserSrc);\n  //   });\n  // }\n  // }, [hoveredImg]);\n\n  return (\n    <div className={styles.StudioCard}>\n      <div\n        className={styles.imgContainer}\n        onMouseEnter={() => {\n          setHoveredImg(true);\n        }}\n        onMouseLeave={() => {\n          setHoveredImg(false);\n        }}\n      >\n        <Link href={articleLink}>\n          <ProgressiveImage src={teaserSrc} placeholder={`/img/loader.svg`}>\n            {(src, loading) => (\n              <img\n                className={styles.cardImg}\n                onClick={() => openArticle(id)}\n                src={src}\n                alt={artist}\n              />\n            )}\n          </ProgressiveImage>\n        </Link>\n      </div>\n\n      <h4 className={styles.primary}>{artist}</h4>\n\n      <h4 className={styles.secondary}>\n        <Disc\n          className={styles.Icon}\n          size={18}\n          strokeWidth=\"2\"\n          color=\"#4b4b4b\"\n          fill=\"#fff\"\n        />{\" \"}\n        {city}\n      </h4>\n\n      {dates && (\n        <h4 className={styles.secondary}>\n          Next Visit{\" \"}\n          <strong>\n            {moment(dates[0].toDate(), \"DD/MM/YYYY hh:mm\").format(\"D MMM\")}\n          </strong>\n        </h4>\n      )}\n\n      <p className={styles.textMini}>{textMini}</p>\n\n      {artStyles && (\n        <h4 className={styles.secondary}>\n          <Hash\n            className={styles.Icon}\n            size={18}\n            strokeWidth=\"2\"\n            color=\"#4b4b4b\"\n            fill=\"#fff\"\n          />{\" \"}\n          {artStyles}\n        </h4>\n      )}\n    </div>\n  );\n};\n\nStudioCard.propTypes = {\n  studio: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    artist: PropTypes.string.isRequired,\n    dates: PropTypes.array.isRequired,\n    city: PropTypes.string.isRequired,\n    styles: PropTypes.string.isRequired,\n    textMini: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default StudioCard;\n"]},"metadata":{},"sourceType":"module"}