{"ast":null,"code":"import _slicedToArray from \"/home/you/Code/github/kksso/kksso-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useDocument, useCollection } from \"react-firebase-hooks/firestore\"; // import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport { ChevronLeft, Disc } from \"react-feather\"; // import EmailForm from \"Components/EmailForm\";\n// // import ImagesCarousel from \"Components/ImagesCarousel\";\n\nimport \"./index.module.scss\";\n\nvar Studio = function Studio() {\n  _s();\n\n  var router = useRouter();\n  var pid = router.query.pid;\n  var firebase = useContext(FirebaseContext);\n\n  var _useCollection = useCollection(firebase.firestore().collection(\"studios\"), {\n    snapshotListenOptions: {\n      includeMetadataChanges: true\n    }\n  }),\n      _useCollection2 = _slicedToArray(_useCollection, 3),\n      value = _useCollection2[0],\n      loading = _useCollection2[1],\n      error = _useCollection2[2]; //   const sayHello = firebase.functions().httpsCallable(\"sayHelloFunc\");\n  //   const getProducts = firebase.functions().httpsCallable(\"getProductsCF\");\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      studioData = _useState2[0],\n      setStudioData = _useState2[1];\n\n  useEffect(function () {\n    if (value) {\n      var data = value.docs.map(function (doc) {\n        return doc.data();\n      });\n      var theStudioData = data.filter(function (studio) {\n        return studio.id === pid;\n      });\n      setStudioData(theStudioData);\n      console.log(theStudioData);\n    } // sayHello({ name: \"Shaun\" }).then((result) => {\n    //   console.log(result.data);\n    // });\n    // getProducts({}).then((result) => {\n    //   console.log(result.data);\n    //   setResultfromCF(result.data);\n    // });\n\n  }, [value]);\n  var paragraphSeperator = \"\\\\\";\n\n  var makeParagraphs = function makeParagraphs(paragraphString, pSeparator) {\n    return paragraphString.split(pSeparator).map(function (paragraph, index) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, paragraph) // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n      ;\n    });\n  }; // const makeImagesArray = () => {\n  //   const imgUrls =\n  //     images !== undefined &&\n  //     images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n  //   const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n  //   const imgs = imgUrls.reduce((acc, current, index) => {\n  //     acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n  //     return acc;\n  //   }, []);\n  //   return imgs;\n  // };\n\n\n  return __jsx(Grid, {\n    fluid: true,\n    className: \"article-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    className: \"pinklink\",\n    to: \"/studios/\",\n    onClick: function onClick() {\n      return closeArticle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(ChevronLeft, {\n    size: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), \" BACK\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, artist), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Mediums\"), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Studio\"), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Disc, {\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#7fffd4\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), \" \")), __jsx(Col, {\n    xs: 12,\n    md: 5,\n    mdOffset: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Studio, \"B5M0R1nGHcI/JIQYFriLIOKAKsc=\", false, function () {\n  return [useRouter, useCollection];\n});\n\n_c = Studio;\nStudio.propTypes = {//   article: PropTypes.shape({\n  //     id: PropTypes.string.isRequired,\n  //     dates: PropTypes.string.isRequired,\n  //     styles: PropTypes.string.isRequired,\n  //     city: PropTypes.string.isRequired,\n  //     rules: PropTypes.string.isRequired,\n  //     artistText: PropTypes.string.isRequired,\n  //     studioText: PropTypes.string.isRequired,\n  //   }).isRequired,\n  //   closeArticle: PropTypes.func.isRequired,\n}; // export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Studio\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js"],"names":["React","PropTypes","useRouter","Link","useDocument","useCollection","Grid","Row","Col","ChevronLeft","Disc","Studio","router","pid","query","firebase","useContext","FirebaseContext","firestore","collection","snapshotListenOptions","includeMetadataChanges","value","loading","error","useState","studioData","setStudioData","useEffect","data","docs","map","doc","theStudioData","filter","studio","id","console","log","paragraphSeperator","makeParagraphs","paragraphString","pSeparator","split","paragraph","index","closeArticle","artist","propTypes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,gCAA3C,C,CAEA;;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,4CAA/B;AAEA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,eAAlC,C,CAEA;AACA;;AACA,OAAO,qBAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AADmB,MAEXW,GAFW,GAEHD,MAAM,CAACE,KAFJ,CAEXD,GAFW;AAInB,MAAME,QAAQ,GAAGC,UAAU,CAACC,eAAD,CAA3B;;AAJmB,uBAMaZ,aAAa,CAC3CU,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,CAD2C,EAE3C;AACEC,IAAAA,qBAAqB,EAAE;AAAEC,MAAAA,sBAAsB,EAAE;AAA1B;AADzB,GAF2C,CAN1B;AAAA;AAAA,MAMZC,KANY;AAAA,MAMLC,OANK;AAAA,MAMIC,KANJ,uBAYnB;AACA;;;AAbmB,kBAeiBC,QAAQ,CAAC,EAAD,CAfzB;AAAA;AAAA,MAeZC,UAfY;AAAA,MAeAC,aAfA;;AAiBnBC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIN,KAAJ,EAAW;AACT,UAAMO,IAAI,GAAGP,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD;AAAA,eAASA,GAAG,CAACH,IAAJ,EAAT;AAAA,OAAf,CAAb;AACA,UAAMI,aAAa,GAAGJ,IAAI,CAACK,MAAL,CAAY,UAACC,MAAD;AAAA,eAAYA,MAAM,CAACC,EAAP,KAAcvB,GAA1B;AAAA,OAAZ,CAAtB;AACAc,MAAAA,aAAa,CAACM,aAAD,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACD,KANa,CAOd;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAdQ,EAcN,CAACX,KAAD,CAdM,CAAT;AAgBA,MAAMiB,kBAAkB,GAAG,IAA3B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD,EAAkBC,UAAlB,EAAiC;AACtD,WAAOD,eAAe,CAACE,KAAhB,CAAsBD,UAAtB,EAAkCX,GAAlC,CAAsC,UAACa,SAAD,EAAYC,KAAZ;AAAA,aAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,SAAJ,CAD2C,CAE3C;AAF2C;AAAA,KAAtC,CAAP;AAID,GALD,CAnCmB,CA0CnB;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,EAAE,aAFJ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,YAAY,EAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,UADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,WAAW,EAAC,GAA5B;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACiE,GADjE,CAbF,CADF,EAqBE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,QAAQ,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAZF,CADF,CADF;AAqED,CA9HD;;GAAMpC,M;UACWT,S,EAKiBG,a;;;KAN5BM,M;AA+HNA,MAAM,CAACqC,SAAP,GAAmB,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAViB,CAAnB,C,CAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAerC,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useDocument, useCollection } from \"react-firebase-hooks/firestore\";\n\n// import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\n\nimport { ChevronLeft, Disc } from \"react-feather\";\n\n// import EmailForm from \"Components/EmailForm\";\n// // import ImagesCarousel from \"Components/ImagesCarousel\";\nimport \"./index.module.scss\";\n\nconst Studio = () => {\n  const router = useRouter();\n  const { pid } = router.query;\n\n  const firebase = useContext(FirebaseContext);\n\n  const [value, loading, error] = useCollection(\n    firebase.firestore().collection(\"studios\"),\n    {\n      snapshotListenOptions: { includeMetadataChanges: true },\n    }\n  );\n  //   const sayHello = firebase.functions().httpsCallable(\"sayHelloFunc\");\n  //   const getProducts = firebase.functions().httpsCallable(\"getProductsCF\");\n\n  const [studioData, setStudioData] = useState({});\n\n  useEffect(() => {\n    if (value) {\n      const data = value.docs.map((doc) => doc.data());\n      const theStudioData = data.filter((studio) => studio.id === pid);\n      setStudioData(theStudioData);\n      console.log(theStudioData);\n    }\n    // sayHello({ name: \"Shaun\" }).then((result) => {\n    //   console.log(result.data);\n    // });\n    // getProducts({}).then((result) => {\n    //   console.log(result.data);\n    //   setResultfromCF(result.data);\n    // });\n  }, [value]);\n\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => (\n      <p>{paragraph}</p>\n      // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    ));\n  };\n\n  // const makeImagesArray = () => {\n  //   const imgUrls =\n  //     images !== undefined &&\n  //     images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n\n  //   const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n\n  //   const imgs = imgUrls.reduce((acc, current, index) => {\n  //     acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n  //     return acc;\n  //   }, []);\n\n  //   return imgs;\n  // };\n\n  return (\n    <Grid fluid className=\"article-open\">\n      <Col xs={12}>\n        <Link\n          className=\"pinklink\"\n          to={`/studios/`}\n          onClick={() => closeArticle()}\n        >\n          <ChevronLeft size={14} /> BACK\n        </Link>\n        <br />\n\n        {/* <ImagesCarousel images={makeImagesArray()} /> */}\n\n        <Row>\n          <Col xs={12} md={6}>\n            <br />\n\n            <h2>{artist}</h2>\n\n            <br />\n            {/* {makeParagraphs(artistText, paragraphSeperator)} */}\n\n            <h3>Mediums</h3>\n            {/* <p>{styles}</p> */}\n\n            <h3>Studio</h3>\n\n            <h4>\n              <Disc size={18} strokeWidth=\"2\" color=\"#7fffd4\" fill=\"#fff\" />{\" \"}\n              {/* {city} */}\n            </h4>\n\n            {/* {makeParagraphs(studioText, paragraphSeperator)} */}\n          </Col>\n          <Col xs={12} md={5} mdOffset={1}>\n            {/* <Row> \n              {dates && (\n                <>\n                  {rules.length > 0 && (\n                    <>\n                      <h3>{artist.split(\" \")[0]}'s Visit Rules</h3>\n                      <br />\n                      <ul>\n                        {rules.split(\";\").map((rule, index) => (\n                          <li key={index}>{rule}</li>\n                        ))}\n                      </ul>\n                    </>\n                  )}\n                  <h3>General Visit Tips</h3>\n                  <ul>\n                    <li>Show up on time</li>\n                    <li>Ask before taking photos of the artist and artworks</li>\n                    <li>A gift is almost always a nice touch</li>\n                  </ul>\n                   <EmailForm\n                    openVisitDates={dates.split(\",\")}\n                    artistEmail={email}\n                    artistName={artist}\n                  /> \n                </>\n              )}\n            </Row> */}\n          </Col>\n        </Row>\n      </Col>\n    </Grid>\n  );\n};\nStudio.propTypes = {\n  //   article: PropTypes.shape({\n  //     id: PropTypes.string.isRequired,\n  //     dates: PropTypes.string.isRequired,\n  //     styles: PropTypes.string.isRequired,\n  //     city: PropTypes.string.isRequired,\n  //     rules: PropTypes.string.isRequired,\n  //     artistText: PropTypes.string.isRequired,\n  //     studioText: PropTypes.string.isRequired,\n  //   }).isRequired,\n  //   closeArticle: PropTypes.func.isRequired,\n};\n\n// export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n"]},"metadata":{},"sourceType":"module"}