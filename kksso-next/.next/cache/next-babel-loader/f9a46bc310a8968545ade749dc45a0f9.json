{"ast":null,"code":"var _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState, useEffect } from \"react\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport PropTypes from \"prop-types\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useCollectionOnce, useCollection } from \"react-firebase-hooks/firestore\";\nimport { FirebaseContext } from \"../../services/firebase.js\"; // import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport { ChevronLeft, Disc } from \"react-feather\"; // import EmailForm from \"Components/EmailForm\";\n// import ImagesCarousel from \"Components/ImagesCarousel\";\n\nimport styles from \"./index.module.scss\";\n\nconst Studio = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const firebase = useContext(FirebaseContext);\n  const [value, loading, error] = useCollectionOnce(firebase.firestore().collection(\"studios\"), {\n    snapshotListenOptions: {\n      includeMetadataChanges: true\n    }\n  });\n  const {\n    0: studioData,\n    1: setStudioData\n  } = useState(false);\n  useEffect(() => {\n    if (value) {\n      const data = value.docs.map(doc => doc.data());\n      const theStudioData = data.filter(studio => studio.id === id)[0];\n      setStudioData(theStudioData);\n    }\n  }, [value]);\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => __jsx(\"p\", {\n      key: index,\n      className: styles.studioParagraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, paragraph) // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    );\n  };\n\n  const makeImagesArray = () => {\n    const imgUrls = images !== undefined && images.split(\",\").map(imgId => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n    const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n    const imgs = imgUrls.reduce((acc, current, index) => {\n      acc.push({\n        url: imgUrls[index],\n        caption: imgTexts[index] || \"\"\n      });\n      return acc;\n    }, []);\n    return imgs;\n  };\n\n  return __jsx(Grid, {\n    fluid: true,\n    className: styles.studio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(ChevronLeft, {\n    className: styles.icon,\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), \" \", __jsx(Link, {\n    className: styles.backlink,\n    href: \"/studios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"BACK\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), error && __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"Error: \", JSON.stringify(error)), loading && __jsx(\"img\", {\n    src: `/img/loader.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), value && studioData && // <Row> <ImagesCarousel images={makeImagesArray()} /></Row>\n  __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), __jsx(\"h2\", {\n    className: styles.maintitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, studioData.artist), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), studioData.textLong && makeParagraphs(studioData.textLong, paragraphSeperator), __jsx(\"h3\", {\n    className: styles.sectiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Mediums\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, studioData.styles), __jsx(\"h3\", {\n    className: styles.sectiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Studio\"), __jsx(\"h4\", {\n    className: styles.subsectiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, __jsx(Disc, {\n    className: styles.icon,\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#7fffd4\",\n    fill: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), \" \", studioData.city), studioData.textStudio && makeParagraphs(studioData.textStudio, paragraphSeperator)), __jsx(Col, {\n    xs: 12,\n    md: 5,\n    mdOffset: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, studioData.dates && __jsx(React.Fragment, null, studioData.rules && studioData.rules.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: styles.sectiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, studioData.artist.split(\" \")[0], \"'s Visit Rules\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), __jsx(\"ul\", {\n    className: styles.rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, studioData.rules.split(\";\").map((rule, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, rule)))), __jsx(\"h3\", {\n    className: styles.sectiontitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"General Visit Tips\"), __jsx(\"ul\", {\n    className: styles.rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }\n  }, \"Show up on time\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  }, \"Ask before taking photos of the artist and artworks\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, \"A gift is almost always a nice touch\"))))))));\n};\n\nStudio.propTypes = {}; // export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js"],"names":["useContext","useState","useEffect","PropTypes","useRouter","Link","useCollectionOnce","useCollection","FirebaseContext","Grid","Row","Col","ChevronLeft","Disc","styles","Studio","router","id","query","firebase","value","loading","error","firestore","collection","snapshotListenOptions","includeMetadataChanges","studioData","setStudioData","data","docs","map","doc","theStudioData","filter","studio","paragraphSeperator","makeParagraphs","paragraphString","pSeparator","split","paragraph","index","studioParagraph","makeImagesArray","imgUrls","images","undefined","imgId","artist","imgTexts","imagesText","imgs","reduce","acc","current","push","url","caption","icon","backlink","JSON","stringify","maintitle","textLong","sectiontitle","subsectiontitle","city","textStudio","dates","rules","length","rule","propTypes"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport PropTypes from \"prop-types\";\n\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport {\n  useCollectionOnce,\n  useCollection,\n} from \"react-firebase-hooks/firestore\";\nimport { FirebaseContext } from \"../../services/firebase.js\";\n\n// import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\n\nimport { ChevronLeft, Disc } from \"react-feather\";\n\n// import EmailForm from \"Components/EmailForm\";\n// import ImagesCarousel from \"Components/ImagesCarousel\";\nimport styles from \"./index.module.scss\";\n\nconst Studio = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const firebase = useContext(FirebaseContext);\n\n  const [value, loading, error] = useCollectionOnce(\n    firebase.firestore().collection(\"studios\"),\n    {\n      snapshotListenOptions: { includeMetadataChanges: true },\n    }\n  );\n  const [studioData, setStudioData] = useState(false);\n\n  useEffect(() => {\n    if (value) {\n      const data = value.docs.map((doc) => doc.data());\n      const theStudioData = data.filter((studio) => studio.id === id)[0];\n      setStudioData(theStudioData);\n    }\n  }, [value]);\n\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => (\n      <p key={index} className={styles.studioParagraph}>\n        {paragraph}\n      </p>\n      // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    ));\n  };\n\n  const makeImagesArray = () => {\n    const imgUrls =\n      images !== undefined &&\n      images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n\n    const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n\n    const imgs = imgUrls.reduce((acc, current, index) => {\n      acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n      return acc;\n    }, []);\n\n    return imgs;\n  };\n\n  return (\n    <Grid fluid className={styles.studio}>\n      <Col xs={12}>\n        <ChevronLeft className={styles.icon} size={16} />{\" \"}\n        <Link className={styles.backlink} href=\"/studios\">\n          BACK\n          {/* <>\n            <ChevronLeft className={styles.icon} size={14} /> <span> BACK </span>\n          </> */}\n        </Link>\n        <br />\n        {error && <strong>Error: {JSON.stringify(error)}</strong>}\n        {loading && <img src={`/img/loader.svg`} />}\n        {value && studioData && (\n          // <Row> <ImagesCarousel images={makeImagesArray()} /></Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <br />\n\n              <h2 className={styles.maintitle}>{studioData.artist}</h2>\n\n              <br />\n              {studioData.textLong &&\n                makeParagraphs(studioData.textLong, paragraphSeperator)}\n\n              <h3 className={styles.sectiontitle}>Mediums</h3>\n              <p>{studioData.styles}</p>\n\n              <h3 className={styles.sectiontitle}>Studio</h3>\n\n              <h4 className={styles.subsectiontitle}>\n                <Disc\n                  className={styles.icon}\n                  size={18}\n                  strokeWidth=\"2\"\n                  color=\"#7fffd4\"\n                  fill=\"#fff\"\n                />{\" \"}\n                {studioData.city}\n              </h4>\n\n              {studioData.textStudio &&\n                makeParagraphs(studioData.textStudio, paragraphSeperator)}\n            </Col>\n            <Col xs={12} md={5} mdOffset={1}>\n              <Row>\n                {studioData.dates && (\n                  <>\n                    {studioData.rules && studioData.rules.length > 0 && (\n                      <>\n                        <h3 className={styles.sectiontitle}>\n                          {studioData.artist.split(\" \")[0]}'s Visit Rules\n                        </h3>\n                        <br />\n                        <ul className={styles.rules}>\n                          {studioData.rules.split(\";\").map((rule, index) => (\n                            <li key={index}>{rule}</li>\n                          ))}\n                        </ul>\n                      </>\n                    )}\n                    <h3 className={styles.sectiontitle}>General Visit Tips</h3>\n                    <ul className={styles.rules}>\n                      <li>Show up on time</li>\n                      <li>\n                        Ask before taking photos of the artist and artworks\n                      </li>\n                      <li>A gift is almost always a nice touch</li>\n                    </ul>\n                    {/* <EmailForm\n                openVisitDates={dates.split(\",\")}\n                artistEmail={email}\n                artistName={artist}\n              />  */}\n                  </>\n                )}\n              </Row>\n            </Col>\n          </Row>\n        )}\n      </Col>\n    </Grid>\n  );\n};\nStudio.propTypes = {};\n\n// export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n"]},"metadata":{},"sourceType":"module"}