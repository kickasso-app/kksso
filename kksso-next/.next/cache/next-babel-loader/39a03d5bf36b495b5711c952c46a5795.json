{"ast":null,"code":"var _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/components/StudiosRouter/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { X } from \"react-feather\";\nimport StudioCard from \"../StudioCard\"; // import StudioOpen from \"../StudioOpen\";\n\nimport Masonry from \"react-masonry-css\";\nimport styles from \"./index.module.scss\";\nconst dayButtons = [\"All\", \"In A Week\", \"In A Month\", \"Later\"];\nconst dayValues = [\"All\", \"week\", \"month\", \"later\"];\nconst cityValues = [\"Berlin\", \"Paris\", \"Brussels\"];\nconst categoryButtons = [\"Painting\", \"Sculpture\", \"Prints\", \"Mixed Media\", \"Photography\", \"Installation\", \"Video\", \"Sound\"];\n\nconst StudiosRouter = ({\n  articles\n}) => {\n  const {\n    0: visibleArticles,\n    1: setVisibleArticles\n  } = useState(false);\n  const {\n    0: theDay,\n    1: setTheDay\n  } = useState(\"All\");\n  const {\n    0: theCity,\n    1: setTheCity\n  } = useState(\"All\");\n  const {\n    0: theCat,\n    1: setTheCat\n  } = useState(\"All\");\n\n  const filterArticles = filter => {\n    let filtered = articles;\n    const today = moment();\n    const nextWeek = moment().add(7, \"days\");\n    const nextMonth = moment().add(1, \"months\");\n    const nextYear = moment().add(1, \"years\");\n\n    if (filter.day !== false && filter.day !== \"All\") {\n      filtered = filtered.filter(article => {\n        const datesArray = article.dates.map(d => d.toDate());\n        const dates = datesArray.map(d => moment(d, \"DD/MM/YYYY hh:mm\"));\n        const isNextWeek = dates.some(d => d.isBetween(today, nextWeek));\n        const isNextMonth = dates.some(d => d.isBetween(today, nextMonth));\n        const isLater = dates.some(d => d.isBetween(nextMonth, nextYear));\n        let result = isNextWeek ? \"week \" : \"\";\n        result += isNextMonth ? \"month \" : \"\";\n        result += isLater ? \"later\" : \"\";\n        return result.includes(filter.day);\n      });\n    }\n\n    if (filter.cat !== false && filter.cat !== \"All\") {\n      filtered = filtered.filter(article => {\n        const style = filter.cat.toLowerCase();\n        return article.styles.includes(style);\n      });\n    }\n\n    if (filter.city !== false && filter.city !== \"All\") {\n      filtered = filtered.filter(article => {\n        return article.city.includes(filter.city);\n      });\n    }\n\n    setVisibleArticles(filtered.map(article => {\n      return __jsx(StudioCard, {\n        studio: article,\n        key: article.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }\n      });\n    }));\n    setTheDay(filter.day);\n    setTheCat(filter.cat);\n    setTheCity(filter.city); // sessionStorage.setItem(\"filters\", JSON.stringify(filter));\n  };\n\n  useEffect(() => {\n    // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n    //   openArticle(articleIDRoute);\n    // }\n    // let savedfilters = sessionStorage.getItem(\"filters\");\n    // if (savedfilters) {\n    //   savedfilters = JSON.parse(savedfilters);\n    //   setTheDay(savedfilters.day);\n    //   setTheCat(savedfilters.cat);\n    //   setTheCity(savedfilters.city);\n    //   filterArticles(savedfilters);\n    // } else {\n    //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // }\n    filterArticles({\n      day: theDay,\n      cat: theCat,\n      city: theCity\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [articles]);\n  return __jsx(\"div\", {\n    className: styles.program,\n    id: \"the-program\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.filters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, dayButtons.map((btn, key) => {\n    return __jsx(\"button\", {\n      key: key,\n      className: [\"button\", theDay === dayValues[key] && \" is-checked\"].join(),\n      onClick: () => {\n        filterArticles({\n          day: dayValues[key],\n          cat: theCat,\n          city: theCity\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), cityValues.map((btn, key) => {\n    return __jsx(\"button\", {\n      key: key,\n      className: [\"button styles\", theCity === btn && \" is-checked\"].join(),\n      onClick: () => {\n        filterArticles({\n          day: theDay,\n          cat: theCat,\n          city: btn\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"button\", {\n    className: \"button styles\",\n    onClick: () => {\n      filterArticles({\n        day: theDay,\n        cat: theCat,\n        city: \"All\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(X, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), categoryButtons.map((btn, key) => {\n    return __jsx(\"button\", {\n      key: key,\n      className: [\"button styles\", theCat === btn && \" is-checked\"].join(),\n      onClick: () => {\n        filterArticles({\n          day: theDay,\n          cat: btn,\n          city: theCity\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"button\", {\n    className: \"button styles\",\n    onClick: () => {\n      filterArticles({\n        day: theDay,\n        cat: \"All\",\n        city: theCity\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(X, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    className: \"all-articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(Masonry, {\n    breakpointCols: {\n      default: 3,\n      960: 3,\n      768: 2,\n      600: 1\n    },\n    className: \"my-masonry-grid\",\n    columnClassName: \"my-masonry-grid_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, visibleArticles))));\n};\n\nStudiosRouter.propTypes = {\n  articles: PropTypes.array.isRequired // articleIDRoute: PropTypes.string,\n\n};\nexport default StudiosRouter;","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/components/StudiosRouter/index.js"],"names":["useState","useEffect","PropTypes","moment","X","StudioCard","Masonry","styles","dayButtons","dayValues","cityValues","categoryButtons","StudiosRouter","articles","visibleArticles","setVisibleArticles","theDay","setTheDay","theCity","setTheCity","theCat","setTheCat","filterArticles","filter","filtered","today","nextWeek","add","nextMonth","nextYear","day","article","datesArray","dates","map","d","toDate","isNextWeek","some","isBetween","isNextMonth","isLater","result","includes","cat","style","toLowerCase","city","id","program","filters","buttons","btn","key","join","default","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport moment from \"moment\";\nimport { X } from \"react-feather\";\n\nimport StudioCard from \"../StudioCard\";\n// import StudioOpen from \"../StudioOpen\";\n\nimport Masonry from \"react-masonry-css\";\nimport styles from \"./index.module.scss\";\n\nconst dayButtons = [\"All\", \"In A Week\", \"In A Month\", \"Later\"];\nconst dayValues = [\"All\", \"week\", \"month\", \"later\"];\nconst cityValues = [\"Berlin\", \"Paris\", \"Brussels\"];\nconst categoryButtons = [\n  \"Painting\",\n  \"Sculpture\",\n  \"Prints\",\n  \"Mixed Media\",\n  \"Photography\",\n  \"Installation\",\n  \"Video\",\n  \"Sound\",\n];\n\nconst StudiosRouter = ({ articles }) => {\n  const [visibleArticles, setVisibleArticles] = useState(false);\n  const [theDay, setTheDay] = useState(\"All\");\n  const [theCity, setTheCity] = useState(\"All\");\n  const [theCat, setTheCat] = useState(\"All\");\n\n  const filterArticles = (filter) => {\n    let filtered = articles;\n    const today = moment();\n    const nextWeek = moment().add(7, \"days\");\n    const nextMonth = moment().add(1, \"months\");\n    const nextYear = moment().add(1, \"years\");\n\n    if (filter.day !== false && filter.day !== \"All\") {\n      filtered = filtered.filter((article) => {\n        const datesArray = article.dates.map((d) => d.toDate());\n        const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n\n        const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n        const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n        const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n\n        let result = isNextWeek ? \"week \" : \"\";\n        result += isNextMonth ? \"month \" : \"\";\n        result += isLater ? \"later\" : \"\";\n\n        return result.includes(filter.day);\n      });\n    }\n    if (filter.cat !== false && filter.cat !== \"All\") {\n      filtered = filtered.filter((article) => {\n        const style = filter.cat.toLowerCase();\n        return article.styles.includes(style);\n      });\n    }\n    if (filter.city !== false && filter.city !== \"All\") {\n      filtered = filtered.filter((article) => {\n        return article.city.includes(filter.city);\n      });\n    }\n\n    setVisibleArticles(\n      filtered.map((article) => {\n        return <StudioCard studio={article} key={article.id} />;\n      })\n    );\n    setTheDay(filter.day);\n    setTheCat(filter.cat);\n    setTheCity(filter.city);\n    // sessionStorage.setItem(\"filters\", JSON.stringify(filter));\n  };\n\n  useEffect(() => {\n    // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n    //   openArticle(articleIDRoute);\n    // }\n\n    // let savedfilters = sessionStorage.getItem(\"filters\");\n    // if (savedfilters) {\n    //   savedfilters = JSON.parse(savedfilters);\n    //   setTheDay(savedfilters.day);\n    //   setTheCat(savedfilters.cat);\n    //   setTheCity(savedfilters.city);\n    //   filterArticles(savedfilters);\n    // } else {\n    //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // }\n\n    filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [articles]);\n\n  return (\n    <div className={styles.program} id=\"the-program\">\n      <div>\n        <div className={styles.filters}>\n          <div className={styles.buttons}>\n            {dayButtons.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={[\n                    \"button\",\n                    theDay === dayValues[key] && \" is-checked\",\n                  ].join()}\n                  onClick={() => {\n                    filterArticles({\n                      day: dayValues[key],\n                      cat: theCat,\n                      city: theCity,\n                    });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <br />\n            {cityValues.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={[\n                    \"button styles\",\n                    theCity === btn && \" is-checked\",\n                  ].join()}\n                  onClick={() => {\n                    filterArticles({ day: theDay, cat: theCat, city: btn });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <button\n              className=\"button styles\"\n              onClick={() => {\n                filterArticles({ day: theDay, cat: theCat, city: \"All\" });\n              }}\n            >\n              <X size={16} strokeWidth=\"3\" />\n            </button>\n            <br />\n            {categoryButtons.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={[\n                    \"button styles\",\n                    theCat === btn && \" is-checked\",\n                  ].join()}\n                  onClick={() => {\n                    filterArticles({ day: theDay, cat: btn, city: theCity });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <button\n              className=\"button styles\"\n              onClick={() => {\n                filterArticles({ day: theDay, cat: \"All\", city: theCity });\n              }}\n            >\n              <X size={16} strokeWidth=\"3\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"all-articles\">\n          <Masonry\n            breakpointCols={{\n              default: 3,\n              960: 3,\n              768: 2,\n              600: 1,\n            }}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {visibleArticles}\n          </Masonry>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStudiosRouter.propTypes = {\n  articles: PropTypes.array.isRequired,\n  // articleIDRoute: PropTypes.string,\n};\n\nexport default StudiosRouter;\n"]},"metadata":{},"sourceType":"module"}