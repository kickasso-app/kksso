{"ast":null,"code":"import moment from \"moment\";\nconst today = moment();\nconst nextWeek = moment().add(7, \"days\");\nconst nextMonth = moment().add(1, \"months\");\nconst nextYear = moment().add(1, \"years\");\n\nconst filterStudios = ({\n  studios,\n  query: {\n    day,\n    mediums,\n    city\n  }\n}) => {\n  let filtered = studios; // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n  // if (day !== false && day !== \"All\") {\n  //   filtered = filtered.filter((studio) => {\n  //     const datesArray = studio.dates.map((d) => d.toDate());\n  //     const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n  //     const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n  //     const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n  //     const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n  //     let result = isNextWeek ? \"week \" : \"\";\n  //     result += isNextMonth ? \"month \" : \"\";\n  //     result += isLater ? \"later\" : \"\";\n  //     return result.includes(day);\n  //   });\n  // }\n\n  if (mediums && mediums !== false && mediums !== \"All\") {\n    filtered = filtered.filter(studio => {\n      const style = mediums.toLowerCase();\n      return studio.styles.includes(style);\n    });\n  }\n\n  if (city && city !== false && city !== \"All\") {\n    filtered = filtered.filter(studio => {\n      return studio.city.includes(city);\n    });\n  }\n\n  return filtered;\n}; // load filters from sessionStorage\n// useEffect(() => {\n//     // if (studioIDRoute > 0 && studioIDRoute <= studios.length) {\n//     //   openstudio(studioIDRoute);\n//     // }\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterstudios(savedfilters);\n//     // } else {\n//     //   filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // }\n//     filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [studios]);\n\n\nexport default filterStudios;","map":{"version":3,"sources":["/home/you/Code/github/kksso/components/StudiosFilter/filterStudios.js"],"names":["moment","today","nextWeek","add","nextMonth","nextYear","filterStudios","studios","query","day","mediums","city","filtered","filter","studio","style","toLowerCase","styles","includes"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,EAApB;AACA,MAAME,QAAQ,GAAGF,MAAM,GAAGG,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAAjB;AACA,MAAMC,SAAS,GAAGJ,MAAM,GAAGG,GAAT,CAAa,CAAb,EAAgB,QAAhB,CAAlB;AACA,MAAME,QAAQ,GAAGL,MAAM,GAAGG,GAAT,CAAa,CAAb,EAAgB,OAAhB,CAAjB;;AAEA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB;AAAlB,CAAD,KAAgD;AACpE,MAAIC,QAAQ,GAAGL,OAAf,CADoE,CAEpE;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAIG,OAAO,IAAIA,OAAO,KAAK,KAAvB,IAAgCA,OAAO,KAAK,KAAhD,EAAuD;AACrDE,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,MAAD,IAAY;AACrC,YAAMC,KAAK,GAAGL,OAAO,CAACM,WAAR,EAAd;AACA,aAAOF,MAAM,CAACG,MAAP,CAAcC,QAAd,CAAuBH,KAAvB,CAAP;AACD,KAHU,CAAX;AAID;;AAED,MAAIJ,IAAI,IAAIA,IAAI,KAAK,KAAjB,IAA0BA,IAAI,KAAK,KAAvC,EAA8C;AAC5CC,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBC,MAAD,IAAY;AACrC,aAAOA,MAAM,CAACH,IAAP,CAAYO,QAAZ,CAAqBP,IAArB,CAAP;AACD,KAFU,CAAX;AAGD;;AAED,SAAOC,QAAP;AACD,CAnCD,C,CAqCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeN,aAAf","sourcesContent":["import moment from \"moment\";\n\nconst today = moment();\nconst nextWeek = moment().add(7, \"days\");\nconst nextMonth = moment().add(1, \"months\");\nconst nextYear = moment().add(1, \"years\");\n\nconst filterStudios = ({ studios, query: { day, mediums, city } }) => {\n  let filtered = studios;\n  // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n\n  // if (day !== false && day !== \"All\") {\n  //   filtered = filtered.filter((studio) => {\n  //     const datesArray = studio.dates.map((d) => d.toDate());\n  //     const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n\n  //     const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n  //     const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n  //     const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n\n  //     let result = isNextWeek ? \"week \" : \"\";\n  //     result += isNextMonth ? \"month \" : \"\";\n  //     result += isLater ? \"later\" : \"\";\n\n  //     return result.includes(day);\n  //   });\n  // }\n\n  if (mediums && mediums !== false && mediums !== \"All\") {\n    filtered = filtered.filter((studio) => {\n      const style = mediums.toLowerCase();\n      return studio.styles.includes(style);\n    });\n  }\n\n  if (city && city !== false && city !== \"All\") {\n    filtered = filtered.filter((studio) => {\n      return studio.city.includes(city);\n    });\n  }\n\n  return filtered;\n};\n\n// load filters from sessionStorage\n// useEffect(() => {\n//     // if (studioIDRoute > 0 && studioIDRoute <= studios.length) {\n//     //   openstudio(studioIDRoute);\n//     // }\n\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterstudios(savedfilters);\n//     // } else {\n//     //   filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // }\n\n//     filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [studios]);\n\nexport default filterStudios;\n"]},"metadata":{},"sourceType":"module"}