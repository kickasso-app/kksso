{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/components/StudiosFilter/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { Box, Text } from \"grommet\";\nimport Masonry from \"react-masonry-css\";\nimport SearchBar from \"./../../components/SearchBar\";\nimport StudioCard from \"../StudioCard\";\nimport filterStudios from \"./filterStudios\";\nimport styles from \"./index.module.scss\";\n\nvar StudiosFilter = function StudiosFilter(_ref) {\n  _s();\n\n  var studios = _ref.studios,\n      query = _ref.query;\n\n  var _useState = useState(studios),\n      visibleStudios = _useState[0],\n      setVisibleStudios = _useState[1];\n\n  useEffect(function () {\n    if (studios && query) {\n      var filteredStudios = filterStudios({\n        studios: studios,\n        query: query\n      });\n      setVisibleStudios(filteredStudios);\n    }\n  }, [studios, query]);\n  return __jsx(\"div\", {\n    className: styles.studios,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    margin: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    isActive: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), __jsx(Box, {\n    margin: {\n      vertical: \"large\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, visibleStudios.length ? __jsx(Masonry, {\n    breakpointCols: {\n      \"default\": 3,\n      960: 3,\n      768: 2,\n      600: 1\n    },\n    className: styles.masonryGrid,\n    columnClassName: styles.masonryGridColumn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, visibleStudios.map(function (studio) {\n    return __jsx(StudioCard, {\n      studio: studio,\n      key: studio.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    });\n  })) : __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"No matching studios.\")));\n};\n\n_s(StudiosFilter, \"3RAVV98LMXtLxf1TQ1/GuSjM6qQ=\");\n\n_c = StudiosFilter;\nexport default StudiosFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudiosFilter\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/components/StudiosFilter/index.js"],"names":["useState","useEffect","Box","Text","Masonry","SearchBar","StudioCard","filterStudios","styles","StudiosFilter","studios","query","visibleStudios","setVisibleStudios","filteredStudios","vertical","length","masonryGrid","masonryGridColumn","map","studio","id"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,SAASC,GAAT,EAAcC,IAAd,QAA0B,SAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAwB;AAAA;;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACAX,QAAQ,CAACU,OAAD,CADR;AAAA,MACrCE,cADqC;AAAA,MACrBC,iBADqB;;AAG5CZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,OAAO,IAAIC,KAAf,EAAsB;AACpB,UAAMG,eAAe,GAAGP,aAAa,CAAC;AAAEG,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,KAAK,EAALA;AAAX,OAAD,CAArC;AACAE,MAAAA,iBAAiB,CAACC,eAAD,CAAjB;AACD;AACF,GALQ,EAKN,CAACJ,OAAD,EAAUC,KAAV,CALM,CAAT;AAOA,SACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,cAAc,CAACI,MAAf,GACC,MAAC,OAAD;AACE,IAAA,cAAc,EAAE;AACd,iBAAS,CADK;AAEd,WAAK,CAFS;AAGd,WAAK,CAHS;AAId,WAAK;AAJS,KADlB;AAOE,IAAA,SAAS,EAAER,MAAM,CAACS,WAPpB;AAQE,IAAA,eAAe,EAAET,MAAM,CAACU,iBAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,cAAc,CAACO,GAAf,CAAmB,UAACC,MAAD,EAAY;AAC9B,WAAO,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,MAApB;AAA4B,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAVH,CADD,GAgBC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjBJ,CAJF,CADF;AA2BD,CArCD;;GAAMZ,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport { Box, Text } from \"grommet\";\nimport Masonry from \"react-masonry-css\";\n\nimport SearchBar from \"./../../components/SearchBar\";\nimport StudioCard from \"../StudioCard\";\nimport filterStudios from \"./filterStudios\";\nimport styles from \"./index.module.scss\";\n\nconst StudiosFilter = ({ studios, query }) => {\n  const [visibleStudios, setVisibleStudios] = useState(studios);\n\n  useEffect(() => {\n    if (studios && query) {\n      const filteredStudios = filterStudios({ studios, query });\n      setVisibleStudios(filteredStudios);\n    }\n  }, [studios, query]);\n\n  return (\n    <div className={styles.studios}>\n      <Box margin={\"medium\"}>\n        <SearchBar isActive={false} />\n      </Box>\n      <Box margin={{ vertical: \"large\" }}>\n        {visibleStudios.length ? (\n          <Masonry\n            breakpointCols={{\n              default: 3,\n              960: 3,\n              768: 2,\n              600: 1,\n            }}\n            className={styles.masonryGrid}\n            columnClassName={styles.masonryGridColumn}\n          >\n            {visibleStudios.map((studio) => {\n              return <StudioCard studio={studio} key={studio.id} />;\n            })}\n          </Masonry>\n        ) : (\n          <Text>No matching studios.</Text>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default StudiosFilter;\n"]},"metadata":{},"sourceType":"module"}