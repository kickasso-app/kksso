{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/pages/join/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport * as emailjs from \"emailjs-com\";\nimport { CheckCircle, XCircle } from \"react-feather\";\nimport { Box, Form, FormField, MaskedInput, CheckBoxGroup, TextArea, TextInput, Text, Heading, Grommet } from \"grommet\";\nimport Button from \"./../../components/Button\";\nvar SERVICE_ID = process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID;\nvar TEMPLATE_ID = process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID;\nvar USER_ID = process.env.NEXT_PUBLIC_EMAILJS_USER_ID;\n\nvar Join = function Join() {\n  _s();\n\n  var _useState = useState({\n    requestor_email: \"Requestor email\",\n    from_name: \"Requestor Name\",\n    about: \"Hello There Message\",\n    city: \"Berlin\",\n    mediums: \"\",\n    types: \"1\",\n    portfolio: \"\"\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(false),\n      isEmailSent = _useState2[0],\n      setIsEmailSent = _useState2[1];\n\n  var _useState3 = useState(false),\n      sendEmailError = _useState3[0],\n      setSendEmailError = _useState3[1]; // Remove in Production\n\n\n  var sendingRealEmail = false;\n  useEffect(function () {\n    emailjs.init(USER_ID);\n  }, []);\n\n  var handleSendEmail = function handleSendEmail() {\n    var templateParams = values;\n    console.log(templateParams);\n\n    if (isEmailSent === false && sendingRealEmail) {\n      emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams, USER_ID).then(function (response) {\n        console.log(response.status, response.text);\n        setIsEmailSent(true);\n      }, function (err) {\n        console.log(err);\n        setSendEmailError(err);\n      });\n      setIsEmailSent(true);\n    } else {\n      // Remove in Production\n      console.log(\"Not sending for now, just testing!\");\n      setIsEmailSent(true);\n    }\n  };\n\n  var fieldMargin = {\n    vertical: \"medium\"\n  };\n  var textMargin = {\n    bottom: \"medium\"\n  };\n  return __jsx(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    width: \"large\",\n    pad: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    level: \"3\",\n    size: \"medium\",\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Welcome\"), __jsx(Text, {\n    size: \"medium\",\n    margin: textMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Add your info here and we will get back to you as soon as possible.\"), __jsx(Grommet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \" \", __jsx(Form, {\n    values: values,\n    onChange: function onChange(nextValue) {\n      setValues(nextValue); // console.log(\"Change\", nextValue);\n    },\n    onReset: function onReset() {\n      return setValues({\n        requestor_email: \"Requestor email\",\n        from_name: \"Requestor Name\",\n        message: \"Hello There Message\"\n      });\n    },\n    onSubmit: handleSendEmail,\n    validate: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(FormField, {\n    name: \"from_name\",\n    htmlfor: \"text-input-id\",\n    label: \"Name\",\n    required: true,\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    id: \"text-input-id\",\n    name: \"from_name\",\n    placeholder: \"Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    label: \"Email\",\n    name: \"requestor_email\",\n    required: true,\n    validate: {\n      regexp: /\\S+@\\S+\\.\\S+/,\n      message: \"Enter a valid email address\"\n    },\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(MaskedInput, {\n    name: \"requestor_email\",\n    mask: [{\n      regexp: /^[\\w\\-_.]+$/,\n      placeholder: \"your\"\n    }, {\n      fixed: \"@\"\n    }, {\n      regexp: /^[\\w]+$/,\n      placeholder: \"email\"\n    }, {\n      fixed: \".\"\n    }, {\n      regexp: /^[\\w]+$/,\n      placeholder: \"com\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    name: \"city\",\n    htmlfor: \"text-input-id\",\n    label: \"City\",\n    margin: fieldMargin,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    id: \"text-input-id\",\n    name: \"city\",\n    placeholder: \"Berlin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    name: \"mediums\",\n    htmlfor: \"text-input-id\",\n    label: \"Mediums used\",\n    required: true,\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    id: \"text-input-id\",\n    name: \"mediums\",\n    placeholder: \"painting, prints, sound\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    name: \"types\",\n    label: \"How would you use your account?\",\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(CheckBoxGroup, {\n    name: \"types\",\n    valueKey: \"id\",\n    required: true,\n    options: [{\n      label: \"Artist\",\n      id: \"1\"\n    }, {\n      label: \"Art Lover\",\n      id: \"2\"\n    }, {\n      label: \"Collector\",\n      id: \"3\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    label: \"Hello!\",\n    name: \"message\",\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    name: \"about\",\n    placeholder: \"Tell us about your artwork or collection, and your space or studio (required)\",\n    fill: true,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), __jsx(FormField, {\n    name: \"portfolio\",\n    htmlfor: \"text-input-id\",\n    label: \"Portfolio\",\n    type: \"url\",\n    margin: fieldMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    id: \"text-input-id\",\n    name: \"portfolio\",\n    placeholder: \"Link (optional)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    direction: \"row\",\n    gap: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    btnStyle: \"filled\",\n    disabled: isEmailSent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Join\"), __jsx(Button, {\n    type: \"reset\",\n    btnStyle: \"outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Clear\")), isEmailSent ? __jsx(React.Fragment, null, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, __jsx(CheckCircle, {\n    size: 24,\n    color: \"#C0FFF4\",\n    strokeWidth: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }), \"Thanks for joining!\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }), \" Please check your email to confirm your account details.\")) : sendEmailError && __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, __jsx(XCircle, {\n    size: 24,\n    color: \"#FFC0CB\",\n    strokeWidth: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }), \"We couldn't send your request this time.\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), \"Please try again.\")))));\n};\n\n_s(Join, \"5FLxySBJK4r0IhRXfLqzdRMli/c=\");\n\n_c = Join;\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/pages/join/index.js"],"names":["React","useState","useEffect","emailjs","CheckCircle","XCircle","Box","Form","FormField","MaskedInput","CheckBoxGroup","TextArea","TextInput","Text","Heading","Grommet","Button","SERVICE_ID","process","env","NEXT_PUBLIC_EMAILJS_SERVICE_ID","TEMPLATE_ID","NEXT_PUBLIC_EMAILJS_TEMPLATE_ID","USER_ID","NEXT_PUBLIC_EMAILJS_USER_ID","Join","requestor_email","from_name","about","city","mediums","types","portfolio","values","setValues","isEmailSent","setIsEmailSent","sendEmailError","setSendEmailError","sendingRealEmail","init","handleSendEmail","templateParams","console","log","send","then","response","status","text","err","fieldMargin","vertical","textMargin","bottom","nextValue","message","regexp","placeholder","fixed","label","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport * as emailjs from \"emailjs-com\";\n\nimport { CheckCircle, XCircle } from \"react-feather\";\n\nimport {\n  Box,\n  Form,\n  FormField,\n  MaskedInput,\n  CheckBoxGroup,\n  TextArea,\n  TextInput,\n  Text,\n  Heading,\n  Grommet,\n} from \"grommet\";\n\nimport Button from \"./../../components/Button\";\n\nconst SERVICE_ID = process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID;\nconst TEMPLATE_ID = process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID;\nconst USER_ID = process.env.NEXT_PUBLIC_EMAILJS_USER_ID;\n\nconst Join = () => {\n  const [values, setValues] = useState({\n    requestor_email: \"Requestor email\",\n    from_name: \"Requestor Name\",\n    about: \"Hello There Message\",\n    city: \"Berlin\",\n    mediums: \"\",\n    types: \"1\",\n    portfolio: \"\",\n  });\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [sendEmailError, setSendEmailError] = useState(false);\n  // Remove in Production\n  const sendingRealEmail = false;\n\n  useEffect(() => {\n    emailjs.init(USER_ID);\n  }, []);\n\n  const handleSendEmail = () => {\n    var templateParams = values;\n    console.log(templateParams);\n\n    if (isEmailSent === false && sendingRealEmail) {\n      emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams, USER_ID).then(\n        function (response) {\n          console.log(response.status, response.text);\n          setIsEmailSent(true);\n        },\n        function (err) {\n          console.log(err);\n          setSendEmailError(err);\n        }\n      );\n      setIsEmailSent(true);\n    } else {\n      // Remove in Production\n      console.log(\"Not sending for now, just testing!\");\n      setIsEmailSent(true);\n    }\n  };\n\n  const fieldMargin = { vertical: \"medium\" };\n  const textMargin = { bottom: \"medium\" };\n\n  return (\n    <Box fill align=\"center\" justify=\"center\">\n      <Box width=\"large\" pad=\"medium\">\n        <Heading level=\"3\" size=\"medium\" margin={fieldMargin}>\n          Welcome\n        </Heading>\n        <Text size=\"medium\" margin={textMargin}>\n          Add your info here and we will get back to you as soon as possible.\n        </Text>\n        <Grommet>\n          {\" \"}\n          <Form\n            values={values}\n            onChange={(nextValue) => {\n              setValues(nextValue);\n              // console.log(\"Change\", nextValue);\n            }}\n            onReset={() =>\n              setValues({\n                requestor_email: \"Requestor email\",\n                from_name: \"Requestor Name\",\n                message: \"Hello There Message\",\n              })\n            }\n            onSubmit={handleSendEmail}\n            validate=\"submit\"\n          >\n            <FormField\n              name=\"from_name\"\n              htmlfor=\"text-input-id\"\n              label=\"Name\"\n              required\n              margin={fieldMargin}\n            >\n              <TextInput\n                id=\"text-input-id\"\n                name=\"from_name\"\n                placeholder=\"Name\"\n              />\n            </FormField>\n            <FormField\n              label=\"Email\"\n              name=\"requestor_email\"\n              required\n              validate={{\n                regexp: /\\S+@\\S+\\.\\S+/,\n                message: \"Enter a valid email address\",\n              }}\n              margin={fieldMargin}\n            >\n              <MaskedInput\n                name=\"requestor_email\"\n                mask={[\n                  { regexp: /^[\\w\\-_.]+$/, placeholder: \"your\" },\n                  { fixed: \"@\" },\n                  { regexp: /^[\\w]+$/, placeholder: \"email\" },\n                  { fixed: \".\" },\n                  { regexp: /^[\\w]+$/, placeholder: \"com\" },\n                ]}\n              />\n            </FormField>\n            <FormField\n              name=\"city\"\n              htmlfor=\"text-input-id\"\n              label=\"City\"\n              margin={fieldMargin}\n              required\n            >\n              <TextInput id=\"text-input-id\" name=\"city\" placeholder=\"Berlin\" />\n            </FormField>\n\n            <FormField\n              name=\"mediums\"\n              htmlfor=\"text-input-id\"\n              label=\"Mediums used\"\n              required\n              margin={fieldMargin}\n            >\n              <TextInput\n                id=\"text-input-id\"\n                name=\"mediums\"\n                placeholder=\"painting, prints, sound\"\n              />\n            </FormField>\n\n            <FormField\n              name=\"types\"\n              label=\"How would you use your account?\"\n              margin={fieldMargin}\n            >\n              <CheckBoxGroup\n                name=\"types\"\n                valueKey=\"id\"\n                required\n                options={[\n                  { label: \"Artist\", id: \"1\" },\n                  { label: \"Art Lover\", id: \"2\" },\n                  { label: \"Collector\", id: \"3\" },\n                ]}\n              />\n            </FormField>\n\n            <FormField label=\"Hello!\" name=\"message\" margin={fieldMargin}>\n              <TextArea\n                name=\"about\"\n                placeholder=\"Tell us about your artwork or collection, and your space or studio (required)\"\n                fill\n                required\n              />\n            </FormField>\n\n            <FormField\n              name=\"portfolio\"\n              htmlfor=\"text-input-id\"\n              label=\"Portfolio\"\n              type=\"url\"\n              margin={fieldMargin}\n            >\n              <TextInput\n                id=\"text-input-id\"\n                name=\"portfolio\"\n                placeholder=\"Link (optional)\"\n              />\n            </FormField>\n            <br />\n            <Box direction=\"row\" gap=\"medium\">\n              <Button type=\"submit\" btnStyle=\"filled\" disabled={isEmailSent}>\n                Join\n              </Button>\n\n              <Button type=\"reset\" btnStyle=\"outline\">\n                Clear\n              </Button>\n            </Box>\n\n            {isEmailSent ? (\n              <>\n                <Text>\n                  <CheckCircle size={24} color=\"#C0FFF4\" strokeWidth={3} />\n                  <br />\n                  Thanks for joining!\n                  <br /> Please check your email to confirm your account\n                  details.\n                </Text>\n              </>\n            ) : (\n              sendEmailError && (\n                <Text>\n                  <XCircle size={24} color=\"#FFC0CB\" strokeWidth={3} />\n                  <br />\n                  We couldn't send your request this time.\n                  <br />\n                  Please try again.\n                </Text>\n              )\n            )}\n          </Form>\n        </Grommet>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Join;\n"]},"metadata":{},"sourceType":"module"}