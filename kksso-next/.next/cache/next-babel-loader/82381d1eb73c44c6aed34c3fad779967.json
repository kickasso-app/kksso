{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/components/StudiosRouter/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { X } from \"react-feather\";\nimport StudioCard from \"../StudioCard\"; // import StudioOpen from \"../StudioOpen\";\n\nimport Masonry from \"react-masonry-css\";\nimport \"./index.module.scss\";\nvar dayButtons = [\"All\", \"In A Week\", \"In A Month\", \"Later\"];\nvar dayValues = [\"All\", \"week\", \"month\", \"later\"];\nvar cityValues = [\"Berlin\", \"Paris\", \"Brussels\"];\nvar categoryButtons = [\"Painting\", \"Sculpture\", \"Prints\", \"Mixed Media\", \"Photography\", \"Installation\", \"Video\", \"Sound\"];\n\nvar StudiosRouter = function StudiosRouter(_ref) {\n  _s();\n\n  var articles = _ref.studiosDB;\n\n  var _useState = useState(false),\n      visibleArticles = _useState[0],\n      setVisibleArticles = _useState[1];\n\n  var _useState2 = useState(\"All\"),\n      theDay = _useState2[0],\n      setTheDay = _useState2[1];\n\n  var _useState3 = useState(\"All\"),\n      theCity = _useState3[0],\n      setTheCity = _useState3[1];\n\n  var _useState4 = useState(\"All\"),\n      theCat = _useState4[0],\n      setTheCat = _useState4[1];\n\n  var filterArticles = function filterArticles(filter) {\n    var filtered = articles;\n    var today = moment();\n    var nextWeek = moment().add(7, \"days\");\n    var nextMonth = moment().add(1, \"months\");\n    var nextYear = moment().add(1, \"years\");\n\n    if (filter.day !== false && filter.day !== \"All\") {\n      filtered = filtered.filter(function (article) {\n        var datesArray = article.dates.map(function (d) {\n          return d.toDate();\n        });\n        var dates = datesArray.map(function (d) {\n          return moment(d, \"DD/MM/YYYY hh:mm\");\n        });\n        var isNextWeek = dates.some(function (d) {\n          return d.isBetween(today, nextWeek);\n        });\n        var isNextMonth = dates.some(function (d) {\n          return d.isBetween(today, nextMonth);\n        });\n        var isLater = dates.some(function (d) {\n          return d.isBetween(nextMonth, nextYear);\n        });\n        var result = isNextWeek ? \"week \" : \"\";\n        result += isNextMonth ? \"month \" : \"\";\n        result += isLater ? \"later\" : \"\";\n        return result.includes(filter.day);\n      });\n    }\n\n    if (filter.cat !== false && filter.cat !== \"All\") {\n      filtered = filtered.filter(function (article) {\n        var style = filter.cat.toLowerCase();\n        return article.styles.includes(style);\n      });\n    }\n\n    if (filter.city !== false && filter.city !== \"All\") {\n      filtered = filtered.filter(function (article) {\n        return article.city.includes(filter.city);\n      });\n    }\n\n    setVisibleArticles(filtered.map(function (article) {\n      return __jsx(StudioCard, {\n        article: article,\n        openArticle: openArticle,\n        key: article.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      });\n    }));\n    setTheDay(filter.day);\n    setTheCat(filter.cat);\n    setTheCity(filter.city); // sessionStorage.setItem(\"filters\", JSON.stringify(filter));\n  };\n\n  useEffect(function () {\n    // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n    //   openArticle(articleIDRoute);\n    // }\n    // let savedfilters = sessionStorage.getItem(\"filters\");\n    // if (savedfilters) {\n    //   savedfilters = JSON.parse(savedfilters);\n    //   setTheDay(savedfilters.day);\n    //   setTheCat(savedfilters.cat);\n    //   setTheCity(savedfilters.city);\n    //   filterArticles(savedfilters);\n    // } else {\n    //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // }\n    filterArticles({\n      day: theDay,\n      cat: theCat,\n      city: theCity\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [articles]);\n  return __jsx(\"div\", {\n    className: \"program\",\n    id: \"the-program\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"buttons button-group filters-button-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, dayButtons.map(function (btn, key) {\n    return __jsx(\"button\", {\n      key: key,\n      className: \"button\" + (theDay === dayValues[key] ? \" is-checked\" : \"\"),\n      onClick: function onClick() {\n        filterArticles({\n          day: dayValues[key],\n          cat: theCat,\n          city: theCity\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), cityValues.map(function (btn, key) {\n    return __jsx(\"button\", {\n      key: key,\n      className: \"button styles\" + (theCity === btn ? \" is-checked\" : \"\"),\n      onClick: function onClick() {\n        filterArticles({\n          day: theDay,\n          cat: theCat,\n          city: btn\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"button\", {\n    className: \"button styles\",\n    onClick: function onClick() {\n      filterArticles({\n        day: theDay,\n        cat: theCat,\n        city: \"All\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, __jsx(X, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), categoryButtons.map(function (btn, key) {\n    return __jsx(\"button\", {\n      key: key,\n      className: \"button styles\" + (theCat === btn ? \" is-checked\" : \"\"),\n      onClick: function onClick() {\n        filterArticles({\n          day: theDay,\n          cat: btn,\n          city: theCity\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, btn);\n  }), __jsx(\"button\", {\n    className: \"button styles\",\n    onClick: function onClick() {\n      filterArticles({\n        day: theDay,\n        cat: \"All\",\n        city: theCity\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(X, {\n    size: 16,\n    strokeWidth: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    className: \"all-articles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, __jsx(Masonry, {\n    breakpointCols: {\n      default: 3,\n      960: 3,\n      768: 2,\n      600: 1\n    },\n    className: \"my-masonry-grid\",\n    columnClassName: \"my-masonry-grid_column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, visibleArticles))));\n};\n\n_s(StudiosRouter, \"Dgvu/iIa7wi8O1JXdRmX/ZKiix4=\");\n\n_c = StudiosRouter;\nStudiosRouter.propTypes = {\n  articles: PropTypes.array.isRequired // articleIDRoute: PropTypes.string,\n\n};\nexport default StudiosRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudiosRouter\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/components/StudiosRouter/index.js"],"names":["useState","useEffect","PropTypes","moment","X","StudioCard","Masonry","dayButtons","dayValues","cityValues","categoryButtons","StudiosRouter","articles","studiosDB","visibleArticles","setVisibleArticles","theDay","setTheDay","theCity","setTheCity","theCat","setTheCat","filterArticles","filter","filtered","today","nextWeek","add","nextMonth","nextYear","day","article","datesArray","dates","map","d","toDate","isNextWeek","some","isBetween","isNextMonth","isLater","result","includes","cat","style","toLowerCase","styles","city","openArticle","id","btn","key","default","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport moment from \"moment\";\nimport { X } from \"react-feather\";\n\nimport StudioCard from \"../StudioCard\";\n// import StudioOpen from \"../StudioOpen\";\n\nimport Masonry from \"react-masonry-css\";\nimport \"./index.module.scss\";\n\nconst dayButtons = [\"All\", \"In A Week\", \"In A Month\", \"Later\"];\nconst dayValues = [\"All\", \"week\", \"month\", \"later\"];\nconst cityValues = [\"Berlin\", \"Paris\", \"Brussels\"];\nconst categoryButtons = [\n  \"Painting\",\n  \"Sculpture\",\n  \"Prints\",\n  \"Mixed Media\",\n  \"Photography\",\n  \"Installation\",\n  \"Video\",\n  \"Sound\",\n];\n\nconst StudiosRouter = ({ studiosDB: articles }) => {\n  const [visibleArticles, setVisibleArticles] = useState(false);\n  const [theDay, setTheDay] = useState(\"All\");\n  const [theCity, setTheCity] = useState(\"All\");\n  const [theCat, setTheCat] = useState(\"All\");\n\n  const filterArticles = (filter) => {\n    let filtered = articles;\n    const today = moment();\n    const nextWeek = moment().add(7, \"days\");\n    const nextMonth = moment().add(1, \"months\");\n    const nextYear = moment().add(1, \"years\");\n\n    if (filter.day !== false && filter.day !== \"All\") {\n      filtered = filtered.filter((article) => {\n        const datesArray = article.dates.map((d) => d.toDate());\n        const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n\n        const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n        const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n        const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n\n        let result = isNextWeek ? \"week \" : \"\";\n        result += isNextMonth ? \"month \" : \"\";\n        result += isLater ? \"later\" : \"\";\n\n        return result.includes(filter.day);\n      });\n    }\n    if (filter.cat !== false && filter.cat !== \"All\") {\n      filtered = filtered.filter((article) => {\n        const style = filter.cat.toLowerCase();\n        return article.styles.includes(style);\n      });\n    }\n    if (filter.city !== false && filter.city !== \"All\") {\n      filtered = filtered.filter((article) => {\n        return article.city.includes(filter.city);\n      });\n    }\n\n    setVisibleArticles(\n      filtered.map((article) => {\n        return (\n          <StudioCard\n            article={article}\n            openArticle={openArticle}\n            key={article.id}\n          />\n        );\n      })\n    );\n    setTheDay(filter.day);\n    setTheCat(filter.cat);\n    setTheCity(filter.city);\n    // sessionStorage.setItem(\"filters\", JSON.stringify(filter));\n  };\n\n  useEffect(() => {\n    // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n    //   openArticle(articleIDRoute);\n    // }\n\n    // let savedfilters = sessionStorage.getItem(\"filters\");\n    // if (savedfilters) {\n    //   savedfilters = JSON.parse(savedfilters);\n    //   setTheDay(savedfilters.day);\n    //   setTheCat(savedfilters.cat);\n    //   setTheCity(savedfilters.city);\n    //   filterArticles(savedfilters);\n    // } else {\n    //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // }\n\n    filterArticles({ day: theDay, cat: theCat, city: theCity });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [articles]);\n\n  return (\n    <div className=\"program\" id=\"the-program\">\n      <div>\n        <div className=\"filters\">\n          <div className=\"buttons button-group filters-button-group\">\n            {dayButtons.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={\n                    \"button\" + (theDay === dayValues[key] ? \" is-checked\" : \"\")\n                  }\n                  onClick={() => {\n                    filterArticles({\n                      day: dayValues[key],\n                      cat: theCat,\n                      city: theCity,\n                    });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <br />\n            {cityValues.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={\n                    \"button styles\" + (theCity === btn ? \" is-checked\" : \"\")\n                  }\n                  onClick={() => {\n                    filterArticles({ day: theDay, cat: theCat, city: btn });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <button\n              className=\"button styles\"\n              onClick={() => {\n                filterArticles({ day: theDay, cat: theCat, city: \"All\" });\n              }}\n            >\n              <X size={16} strokeWidth=\"3\" />\n            </button>\n            <br />\n            {categoryButtons.map((btn, key) => {\n              return (\n                <button\n                  key={key}\n                  className={\n                    \"button styles\" + (theCat === btn ? \" is-checked\" : \"\")\n                  }\n                  onClick={() => {\n                    filterArticles({ day: theDay, cat: btn, city: theCity });\n                  }}\n                >\n                  {btn}\n                </button>\n              );\n            })}\n            <button\n              className=\"button styles\"\n              onClick={() => {\n                filterArticles({ day: theDay, cat: \"All\", city: theCity });\n              }}\n            >\n              <X size={16} strokeWidth=\"3\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"all-articles\">\n          <Masonry\n            breakpointCols={{\n              default: 3,\n              960: 3,\n              768: 2,\n              600: 1,\n            }}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {visibleArticles}\n          </Masonry>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStudiosRouter.propTypes = {\n  articles: PropTypes.array.isRequired,\n  // articleIDRoute: PropTypes.string,\n};\n\nexport default StudiosRouter;\n"]},"metadata":{},"sourceType":"module"}