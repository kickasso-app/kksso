{"ast":null,"code":"import moment from \"moment\";\nvar today = moment();\nvar nextWeek = moment().add(7, \"days\");\nvar nextMonth = moment().add(1, \"months\");\nvar nextYear = moment().add(1, \"years\");\n\nvar filterStudios = function filterStudios(_ref) {\n  var studios = _ref.studios,\n      _ref$filters = _ref.filters,\n      day = _ref$filters.day,\n      medium = _ref$filters.medium,\n      city = _ref$filters.city;\n  var filtered = studios; // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n\n  if (filters.day !== false && filters.day !== \"All\") {\n    filtered = filtered.filter(function (studio) {\n      var datesArray = studio.dates.map(function (d) {\n        return d.toDate();\n      });\n      var dates = datesArray.map(function (d) {\n        return moment(d, \"DD/MM/YYYY hh:mm\");\n      });\n      var isNextWeek = dates.some(function (d) {\n        return d.isBetween(today, nextWeek);\n      });\n      var isNextMonth = dates.some(function (d) {\n        return d.isBetween(today, nextMonth);\n      });\n      var isLater = dates.some(function (d) {\n        return d.isBetween(nextMonth, nextYear);\n      });\n      var result = isNextWeek ? \"week \" : \"\";\n      result += isNextMonth ? \"month \" : \"\";\n      result += isLater ? \"later\" : \"\";\n      return result.includes(filters.day);\n    });\n  }\n\n  if (filters.cat !== false && filters.cat !== \"All\") {\n    filtered = filtered.filter(function (studio) {\n      var style = filters.cat.toLowerCase();\n      return studio.styles.includes(style);\n    });\n  }\n\n  if (filters.city !== false && filters.city !== \"All\") {\n    filtered = filtered.filter(function (studio) {\n      return studio.city.includes(filters.city);\n    });\n  }\n\n  return filtered;\n}; // load filters from sessionStorage\n// useEffect(() => {\n//     // if (studioIDRoute > 0 && studioIDRoute <= studios.length) {\n//     //   openstudio(studioIDRoute);\n//     // }\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterstudios(savedfilters);\n//     // } else {\n//     //   filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // }\n//     filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [studios]);\n\n\nexport default filterStudios;","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/components/StudiosFilter/filterStudios.js"],"names":["moment","today","nextWeek","add","nextMonth","nextYear","filterStudios","studios","filters","day","medium","city","filtered","filter","studio","datesArray","dates","map","d","toDate","isNextWeek","some","isBetween","isNextMonth","isLater","result","includes","cat","style","toLowerCase","styles"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nconst today = moment();\nconst nextWeek = moment().add(7, \"days\");\nconst nextMonth = moment().add(1, \"months\");\nconst nextYear = moment().add(1, \"years\");\n\nconst filterStudios = ({ studios, filters: { day, medium, city } }) => {\n  let filtered = studios;\n  // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n\n  if (filters.day !== false && filters.day !== \"All\") {\n    filtered = filtered.filter((studio) => {\n      const datesArray = studio.dates.map((d) => d.toDate());\n      const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n\n      const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n      const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n      const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n\n      let result = isNextWeek ? \"week \" : \"\";\n      result += isNextMonth ? \"month \" : \"\";\n      result += isLater ? \"later\" : \"\";\n\n      return result.includes(filters.day);\n    });\n  }\n\n  if (filters.cat !== false && filters.cat !== \"All\") {\n    filtered = filtered.filter((studio) => {\n      const style = filters.cat.toLowerCase();\n      return studio.styles.includes(style);\n    });\n  }\n\n  if (filters.city !== false && filters.city !== \"All\") {\n    filtered = filtered.filter((studio) => {\n      return studio.city.includes(filters.city);\n    });\n  }\n\n  return filtered;\n};\n\n// load filters from sessionStorage\n// useEffect(() => {\n//     // if (studioIDRoute > 0 && studioIDRoute <= studios.length) {\n//     //   openstudio(studioIDRoute);\n//     // }\n\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterstudios(savedfilters);\n//     // } else {\n//     //   filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // }\n\n//     filterstudios({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [studios]);\n\nexport default filterStudios;\n"]},"metadata":{},"sourceType":"module"}