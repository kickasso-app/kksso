{"ast":null,"code":"import _slicedToArray from \"/home/you/Code/github/kksso/kksso-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState, useEffect } from \"react\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport PropTypes from \"prop-types\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useDocument, useCollection } from \"react-firebase-hooks/firestore\";\nimport { FirebaseContext } from \"../../services/firebase.js\"; // import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport { ChevronLeft, Disc } from \"react-feather\"; // import EmailForm from \"Components/EmailForm\";\n// import ImagesCarousel from \"Components/ImagesCarousel\";\n\nimport styles from \"./index.module.scss\";\n\nvar Studio = function Studio() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  var firebase = useContext(FirebaseContext);\n\n  var _useCollection = useCollection(firebase.firestore().collection(\"studios\"), {\n    snapshotListenOptions: {\n      includeMetadataChanges: true\n    }\n  }),\n      _useCollection2 = _slicedToArray(_useCollection, 3),\n      value = _useCollection2[0],\n      loading = _useCollection2[1],\n      error = _useCollection2[2]; //   const sayHello = firebase.functions().httpsCallable(\"sayHelloFunc\");\n  //   const getProducts = firebase.functions().httpsCallable(\"getProductsCF\");\n\n\n  var _useState = useState(false),\n      studioData = _useState[0],\n      setStudioData = _useState[1];\n\n  useEffect(function () {\n    if (value) {\n      console.log(id);\n      var data = value.docs.map(function (doc) {\n        return doc.data();\n      });\n      var theStudioData = data.filter(function (studio) {\n        return studio.id === id;\n      })[0];\n      setStudioData(theStudioData);\n    }\n  }, [value]);\n  var paragraphSeperator = \"\\\\\";\n\n  var makeParagraphs = function makeParagraphs(paragraphString, pSeparator) {\n    return paragraphString.split(pSeparator).map(function (paragraph, index) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, paragraph) // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n      ;\n    });\n  };\n\n  var makeImagesArray = function makeImagesArray() {\n    var imgUrls = images !== undefined && images.split(\",\").map(function (imgId) {\n      return \"/img/\" + artist + \"/\" + imgId + \".jpg\";\n    });\n    var imgTexts = imagesText !== undefined && imagesText.split(\";\");\n    var imgs = imgUrls.reduce(function (acc, current, index) {\n      acc.push({\n        url: imgUrls[index],\n        caption: imgTexts[index] || \"\"\n      });\n      return acc;\n    }, []);\n    return imgs;\n  };\n\n  return __jsx(Grid, {\n    fluid: true,\n    className: \"article-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    className: \"pinklink\",\n    href: \"/studios\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"BACK\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), value && studioData && // <Row> <ImagesCarousel images={makeImagesArray()} /></Row>\n  __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, studioData.artist), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), studioData.textLong && makeParagraphs(studioData.textLong, paragraphSeperator), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Mediums\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, studioData.styles), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Studio\"), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(Disc, {\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#7fffd4\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), \" \", studioData.city), studioData.textStudio && makeParagraphs(studioData.textStudio, paragraphSeperator)), __jsx(Col, {\n    xs: 12,\n    md: 5,\n    mdOffset: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, studioData.dates && __jsx(React.Fragment, null, studioData.rules && studioData.rules.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, studioData.artist.split(\" \")[0], \"'s Visit Rules\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, studioData.rules.split(\";\").map(function (rule, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, rule);\n  }))), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"General Visit Tips\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, \"Show up on time\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, \"Ask before taking photos of the artist and artworks\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"A gift is almost always a nice touch\"))))))));\n};\n\n_s(Studio, \"cTnGxIistik1rkABbM1h9qsw4Wk=\", false, function () {\n  return [useRouter, useCollection];\n});\n\n_c = Studio;\nStudio.propTypes = {}; // export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Studio\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js"],"names":["useContext","useState","useEffect","PropTypes","useRouter","Link","useDocument","useCollection","FirebaseContext","Grid","Row","Col","ChevronLeft","Disc","styles","Studio","router","id","query","firebase","firestore","collection","snapshotListenOptions","includeMetadataChanges","value","loading","error","studioData","setStudioData","console","log","data","docs","map","doc","theStudioData","filter","studio","paragraphSeperator","makeParagraphs","paragraphString","pSeparator","split","paragraph","index","makeImagesArray","imgUrls","images","undefined","imgId","artist","imgTexts","imagesText","imgs","reduce","acc","current","push","url","caption","textLong","city","textStudio","dates","rules","length","rule","propTypes"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport PropTypes from \"prop-types\";\n\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useDocument, useCollection } from \"react-firebase-hooks/firestore\";\nimport { FirebaseContext } from \"../../services/firebase.js\";\n\n// import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\n\nimport { ChevronLeft, Disc } from \"react-feather\";\n\n// import EmailForm from \"Components/EmailForm\";\n// import ImagesCarousel from \"Components/ImagesCarousel\";\nimport styles from \"./index.module.scss\";\n\nconst Studio = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const firebase = useContext(FirebaseContext);\n\n  const [value, loading, error] = useCollection(\n    firebase.firestore().collection(\"studios\"),\n    {\n      snapshotListenOptions: { includeMetadataChanges: true },\n    }\n  );\n  //   const sayHello = firebase.functions().httpsCallable(\"sayHelloFunc\");\n  //   const getProducts = firebase.functions().httpsCallable(\"getProductsCF\");\n\n  const [studioData, setStudioData] = useState(false);\n\n  useEffect(() => {\n    if (value) {\n      console.log(id);\n      const data = value.docs.map((doc) => doc.data());\n      const theStudioData = data.filter((studio) => studio.id === id)[0];\n      setStudioData(theStudioData);\n    }\n  }, [value]);\n\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => (\n      <p>{paragraph}</p>\n      // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    ));\n  };\n\n  const makeImagesArray = () => {\n    const imgUrls =\n      images !== undefined &&\n      images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n\n    const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n\n    const imgs = imgUrls.reduce((acc, current, index) => {\n      acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n      return acc;\n    }, []);\n\n    return imgs;\n  };\n\n  return (\n    <Grid fluid className=\"article-open\">\n      <Col xs={12}>\n        <Link className=\"pinklink\" href=\"/studios\">\n          BACK\n          {/* <ChevronLeft size={14} />  */}\n        </Link>\n        <br />\n\n        {value && studioData && (\n          // <Row> <ImagesCarousel images={makeImagesArray()} /></Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <br />\n\n              <h2>{studioData.artist}</h2>\n\n              <br />\n              {studioData.textLong &&\n                makeParagraphs(studioData.textLong, paragraphSeperator)}\n\n              <h3>Mediums</h3>\n              <p>{studioData.styles}</p>\n\n              <h3>Studio</h3>\n\n              <h4>\n                <Disc size={18} strokeWidth=\"2\" color=\"#7fffd4\" fill=\"#fff\" />{\" \"}\n                {studioData.city}\n              </h4>\n\n              {studioData.textStudio &&\n                makeParagraphs(studioData.textStudio, paragraphSeperator)}\n            </Col>\n            <Col xs={12} md={5} mdOffset={1}>\n              <Row>\n                {studioData.dates && (\n                  <>\n                    {studioData.rules && studioData.rules.length > 0 && (\n                      <>\n                        <h3>{studioData.artist.split(\" \")[0]}'s Visit Rules</h3>\n                        <br />\n                        <ul>\n                          {studioData.rules.split(\";\").map((rule, index) => (\n                            <li key={index}>{rule}</li>\n                          ))}\n                        </ul>\n                      </>\n                    )}\n                    <h3>General Visit Tips</h3>\n                    <ul>\n                      <li>Show up on time</li>\n                      <li>\n                        Ask before taking photos of the artist and artworks\n                      </li>\n                      <li>A gift is almost always a nice touch</li>\n                    </ul>\n                    {/* <EmailForm\n                openVisitDates={dates.split(\",\")}\n                artistEmail={email}\n                artistName={artist}\n              />  */}\n                  </>\n                )}\n              </Row>\n            </Col>\n          </Row>\n        )}\n      </Col>\n    </Grid>\n  );\n};\nStudio.propTypes = {};\n\n// export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n"]},"metadata":{},"sourceType":"module"}