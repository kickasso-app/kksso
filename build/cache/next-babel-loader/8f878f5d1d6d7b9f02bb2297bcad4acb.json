{"ast":null,"code":"var _jsxFileName = \"/home/you/Code/github/kksso/pages/studios/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext } from \"react\";\nimport { StudiosContext } from \"../../services/studios\";\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport Link from \"next/link\";\nimport styles from \"./index.module.scss\";\nimport StudiosFilter from \"../../components/StudiosFilter/index.js\";\n\nconst Studios = () => {\n  const {\n    studios,\n    fetchStudios,\n    query,\n    loading,\n    error\n  } = useContext(StudiosContext);\n  useEffect(() => {\n    if (!studios.length) {\n      fetchStudios();\n    }\n  }, [studios]);\n  return __jsx(Grid, {\n    fluid: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    id: styles.studio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, error && __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"Error: \", JSON.stringify(error)), loading ? __jsx(\"img\", {\n    src: `/img/loader.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }) : __jsx(StudiosFilter, {\n    studios: studios,\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Studios;","map":{"version":3,"sources":["/home/you/Code/github/kksso/pages/studios/index.js"],"names":["useEffect","useContext","StudiosContext","Grid","Row","Col","Link","styles","StudiosFilter","Studios","studios","fetchStudios","query","loading","error","length","studio","JSON","stringify"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,4CAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,aAAP,MAA0B,yCAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA;AAAzC,MAAmDb,UAAU,CACjEC,cADiE,CAAnE;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,OAAO,CAACK,MAAb,EAAqB;AACnBJ,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACD,OAAD,CAJM,CAAT;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEH,MAAM,CAACS,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgBG,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAhB,CADZ,EAEGD,OAAO,GACN;AAAK,IAAA,GAAG,EAAG,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEH,OAAxB;AAAiC,IAAA,KAAK,EAAEE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CADF,CADF,CADF;AAgBD,CA3BD;;AA4BA,eAAeH,OAAf","sourcesContent":["import { useEffect, useContext } from \"react\";\nimport { StudiosContext } from \"../../services/studios\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport Link from \"next/link\";\n\nimport styles from \"./index.module.scss\";\n\nimport StudiosFilter from \"../../components/StudiosFilter/index.js\";\n\nconst Studios = () => {\n  const { studios, fetchStudios, query, loading, error } = useContext(\n    StudiosContext\n  );\n\n  useEffect(() => {\n    if (!studios.length) {\n      fetchStudios();\n    }\n  }, [studios]);\n\n  return (\n    <Grid fluid align=\"center\">\n      <section>\n        <Row id={styles.studio}>\n          <Col xs={12} md={12}>\n            {error && <strong>Error: {JSON.stringify(error)}</strong>}\n            {loading ? (\n              <img src={`/img/loader.svg`} />\n            ) : (\n              <StudiosFilter studios={studios} query={query} />\n            )}\n          </Col>\n        </Row>\n      </section>\n    </Grid>\n  );\n};\nexport default Studios;\n"]},"metadata":{},"sourceType":"module"}