{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/components/SearchBar/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo, useRef, useState, useContext } from \"react\";\nimport { StudiosContext } from \"../../services/studios\";\nimport { useRouter } from \"next/router\";\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport { Hash, Disc, Search, X } from \"react-feather\";\nimport { Box, Text, TextInput } from \"grommet\";\nimport { cities, mediums } from \"../../config/filters\";\nexport var SearchBar = function SearchBar(_ref) {\n  _s();\n\n  var _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? true : _ref$isActive;\n\n  var _useContext = useContext(StudiosContext),\n      _useContext$query = _useContext.query,\n      queryCity = _useContext$query.city,\n      queryMedium = _useContext$query.mediums,\n      updateQuery = _useContext.updateQuery;\n\n  var router = useRouter();\n\n  var _useState = useState(isActive),\n      isSearchBarActive = _useState[0],\n      setIsSearchBarActive = _useState[1];\n\n  var _useState2 = useState(false),\n      suggestionOpen = _useState2[0],\n      setSuggestionOpen = _useState2[1];\n\n  var _useState3 = useState(\"cities\"),\n      suggestionsType = _useState3[0],\n      setSuggestionsType = _useState3[1];\n\n  var _useState4 = useState(queryCity),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var _useState5 = useState(queryMedium),\n      medium = _useState5[0],\n      setMedium = _useState5[1]; //   const [times, setTimes] = useState(visitTimes[0]);\n\n\n  var _useState6 = useState(cities),\n      suggestedCities = _useState6[0],\n      setSuggestedCities = _useState6[1];\n\n  var _useState7 = useState(mediums),\n      suggestedMediums = _useState7[0],\n      setSuggestedMediums = _useState7[1];\n\n  var boxRef = useRef();\n  var onChangeMedium = useCallback(function (event) {\n    var query = event.target.value;\n    setMedium(query);\n\n    if (!query.trim()) {\n      setSuggestedMediums(mediums);\n    } else {\n      // simulate an async call to the backend\n      setTimeout(function () {\n        return setSuggestedMediums(mediums.filter(function (medium) {\n          return medium.toLowerCase().indexOf(query.toLowerCase()) >= 0;\n        }));\n      }, 300);\n    }\n  }, []);\n  var onChangeCity = useCallback(function (event) {\n    var query = event.target.value;\n    setCity(query);\n\n    if (!query.trim()) {\n      setSuggestedCities(cities);\n    } else {\n      // simulate an async call to the backend\n      setTimeout(function () {\n        return setSuggestedCities(cities.filter(function (city) {\n          return city.toLowerCase().indexOf(query.toLowerCase()) >= 0;\n        }));\n      }, 300);\n    }\n  }, []);\n  var renderCities = useMemo(function () {\n    return suggestedCities.map(function (city) {\n      return __jsx(Col, {\n        md: 2,\n        align: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, __jsx(Text, {\n        color: \"#4b4b4b\",\n        onClick: function onClick() {\n          return setCity(city);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, __jsx(Disc, {\n        size: 20,\n        strokeWidth: \"1.5\",\n        color: \"#4b4b4b\",\n        fill: \"#fff\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), \"  \", city));\n    });\n  }, [suggestedCities]);\n  var renderMediums = useMemo(function () {\n    return suggestedMediums.map(function (suggestedMedium) {\n      return __jsx(Col, {\n        md: 2,\n        align: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, __jsx(Text, {\n        onClick: function onClick() {\n          // TO DO: add more tan one medium\n          // if (!medium.includes(suggestedMedium)) {\n          //   setMedium(medium + \" \" + suggestedMedium);\n          // }\n          setMedium(suggestedMedium);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, __jsx(Hash, {\n        size: 18,\n        strokeWidth: \"1\",\n        color: \"#4b4b4b\",\n        fill: \"#fff\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), \"  \", suggestedMedium));\n    });\n  }, [suggestedMediums]);\n\n  var renderSearchInput = function renderSearchInput(_ref2) {\n    var boxRef = _ref2.boxRef,\n        title = _ref2.title,\n        placeholder = _ref2.placeholder,\n        searchType = _ref2.searchType,\n        value = _ref2.value,\n        onChange = _ref2.onChange;\n    return __jsx(Box, {\n      ref: boxRef,\n      align: \"start\",\n      onFocus: function onFocus() {\n        return setSuggestionsType(searchType);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, title && __jsx(Text, {\n      margin: {\n        left: \"small\",\n        top: \"xsmall\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, title), __jsx(TextInput, {\n      placeholder: placeholder,\n      plain: true,\n      value: value,\n      onChange: onChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    width: isSearchBarActive ? \"xlarge\" : \"large\",\n    pad: \"small\",\n    border: {\n      color: \"#222222\",\n      size: \"xsmall\",\n      style: \"solid\",\n      side: \"all\"\n    },\n    round: \"large\",\n    onFocus: function onFocus() {\n      setIsSearchBarActive(true);\n      setSuggestionOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    between: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, renderSearchInput({\n    // boxRef: boxRef,\n    title: \"Location\",\n    placeholder: \"Where to visit?\",\n    searchType: \"cities\",\n    value: city,\n    onChange: onChangeCity\n  })), __jsx(Col, {\n    md: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, renderSearchInput({\n    // boxRef: boxRef,\n    title: \"Medium\",\n    placeholder: \"Which styles to explore?\",\n    searchType: \"mediums\",\n    value: medium,\n    onChange: onChangeMedium\n  })), __jsx(Col, {\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    end: \"xs\",\n    onClick: function onClick() {\n      updateQuery({\n        city: city,\n        mediums: medium\n      });\n      setSuggestionOpen(false);\n\n      if (!router.pathname.includes(\"studios\")) {\n        router.push(\"/studios\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"48px\",\n    align: \"center\",\n    pad: \"small\",\n    background: \"#FFC0CB\",\n    round: \"medium\",\n    margin: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, __jsx(Search, {\n    size: 24,\n    color: \"#222222\",\n    strokeWidth: 1.5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }))))))), suggestionOpen && __jsx(Box, {\n    width: \"xlarge\",\n    margin: {\n      vertical: \"small\"\n    },\n    pad: {\n      vertical: \"medium\",\n      horizontal: \"large\"\n    },\n    border: {\n      color: \"#FFC0CB\",\n      size: \"small\",\n      style: \"solid\",\n      side: \"all\"\n    },\n    round: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, suggestionsType === \"cities\" && __jsx(React.Fragment, null, renderCities), suggestionsType === \"mediums\" && __jsx(React.Fragment, null, renderMediums))));\n};\n\n_s(SearchBar, \"dt6mLzX+yy8NpmHK4JRrl9p4G1Q=\", false, function () {\n  return [useRouter];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/components/SearchBar/index.js"],"names":["React","useCallback","useMemo","useRef","useState","useContext","StudiosContext","useRouter","Grid","Row","Col","Hash","Disc","Search","X","Box","Text","TextInput","cities","mediums","SearchBar","isActive","query","queryCity","city","queryMedium","updateQuery","router","isSearchBarActive","setIsSearchBarActive","suggestionOpen","setSuggestionOpen","suggestionsType","setSuggestionsType","setCity","medium","setMedium","suggestedCities","setSuggestedCities","suggestedMediums","setSuggestedMediums","boxRef","onChangeMedium","event","target","value","trim","setTimeout","filter","toLowerCase","indexOf","onChangeCity","renderCities","map","renderMediums","suggestedMedium","renderSearchInput","title","placeholder","searchType","onChange","left","top","color","size","style","side","pathname","includes","push","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n  useContext,\n} from \"react\";\nimport { StudiosContext } from \"../../services/studios\";\nimport { useRouter } from \"next/router\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\n\nimport { Hash, Disc, Search, X } from \"react-feather\";\nimport { Box, Text, TextInput } from \"grommet\";\n\nimport { cities, mediums } from \"../../config/filters\";\n\nexport const SearchBar = ({ isActive = true }) => {\n  const {\n    query: { city: queryCity, mediums: queryMedium },\n    updateQuery,\n  } = useContext(StudiosContext);\n\n  const router = useRouter();\n\n  const [isSearchBarActive, setIsSearchBarActive] = useState(isActive);\n  const [suggestionOpen, setSuggestionOpen] = useState(false);\n  const [suggestionsType, setSuggestionsType] = useState(\"cities\");\n\n  const [city, setCity] = useState(queryCity);\n  const [medium, setMedium] = useState(queryMedium);\n  //   const [times, setTimes] = useState(visitTimes[0]);\n\n  const [suggestedCities, setSuggestedCities] = useState(cities);\n  const [suggestedMediums, setSuggestedMediums] = useState(mediums);\n\n  const boxRef = useRef();\n\n  const onChangeMedium = useCallback((event) => {\n    const { value: query } = event.target;\n    setMedium(query);\n    if (!query.trim()) {\n      setSuggestedMediums(mediums);\n    } else {\n      // simulate an async call to the backend\n      setTimeout(\n        () =>\n          setSuggestedMediums(\n            mediums.filter(\n              (medium) => medium.toLowerCase().indexOf(query.toLowerCase()) >= 0\n            )\n          ),\n        300\n      );\n    }\n  }, []);\n\n  const onChangeCity = useCallback((event) => {\n    const { value: query } = event.target;\n    setCity(query);\n\n    if (!query.trim()) {\n      setSuggestedCities(cities);\n    } else {\n      // simulate an async call to the backend\n      setTimeout(\n        () =>\n          setSuggestedCities(\n            cities.filter(\n              (city) => city.toLowerCase().indexOf(query.toLowerCase()) >= 0\n            )\n          ),\n        300\n      );\n    }\n  }, []);\n\n  const renderCities = useMemo(\n    () =>\n      suggestedCities.map((city) => (\n        <Col md={2} align=\"start\">\n          <Text color=\"#4b4b4b\" onClick={() => setCity(city)}>\n            <Disc size={20} strokeWidth=\"1.5\" color=\"#4b4b4b\" fill=\"#fff\" />\n            {\"  \"}\n            {city}\n          </Text>\n        </Col>\n      )),\n    [suggestedCities]\n  );\n\n  const renderMediums = useMemo(\n    () =>\n      suggestedMediums.map((suggestedMedium) => (\n        <Col md={2} align=\"start\">\n          <Text\n            onClick={() => {\n              // TO DO: add more tan one medium\n              // if (!medium.includes(suggestedMedium)) {\n              //   setMedium(medium + \" \" + suggestedMedium);\n              // }\n              setMedium(suggestedMedium);\n            }}\n          >\n            <Hash size={18} strokeWidth=\"1\" color=\"#4b4b4b\" fill=\"#fff\" />\n            {\"  \"}\n            {suggestedMedium}\n          </Text>\n        </Col>\n      )),\n    [suggestedMediums]\n  );\n\n  const renderSearchInput = ({\n    boxRef,\n    title,\n    placeholder,\n    searchType,\n    value,\n    onChange,\n  }) => {\n    return (\n      <Box\n        ref={boxRef}\n        align=\"start\"\n        onFocus={() => setSuggestionsType(searchType)}\n      >\n        {title && (\n          <Text margin={{ left: \"small\", top: \"xsmall\" }}>{title}</Text>\n        )}\n        <TextInput\n          placeholder={placeholder}\n          plain\n          value={value}\n          onChange={onChange}\n        />\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box\n        width={isSearchBarActive ? \"xlarge\" : \"large\"}\n        pad=\"small\"\n        border={{\n          color: \"#222222\",\n          size: \"xsmall\",\n          style: \"solid\",\n          side: \"all\",\n        }}\n        round=\"large\"\n        onFocus={() => {\n          setIsSearchBarActive(true);\n          setSuggestionOpen(true);\n        }}\n      >\n        <Grid fluid>\n          <Row between=\"xs\">\n            <Col md={3}>\n              {renderSearchInput({\n                // boxRef: boxRef,\n                title: \"Location\",\n                placeholder: \"Where to visit?\",\n                searchType: \"cities\",\n                value: city,\n                onChange: onChangeCity,\n              })}\n            </Col>\n            <Col md={3}>\n              {renderSearchInput({\n                // boxRef: boxRef,\n                title: \"Medium\",\n                placeholder: \"Which styles to explore?\",\n                searchType: \"mediums\",\n                value: medium,\n                onChange: onChangeMedium,\n              })}\n            </Col>\n            {/* <Col md={3}>\n              {searchPart({\n                // boxRef: boxRef,\n                title: \"Time\",\n                placeholder: \"Whhen to visit?\",\n                value: times,\n                onChange: onChangeTimes,\n              })}\n            </Col> */}\n            <Col md={2}>\n              <Row\n                end=\"xs\"\n                onClick={() => {\n                  updateQuery({ city: city, mediums: medium });\n                  setSuggestionOpen(false);\n                  if (!router.pathname.includes(\"studios\")) {\n                    router.push(\"/studios\");\n                  }\n                }}\n              >\n                <Box\n                  width=\"48px\"\n                  align=\"center\"\n                  pad=\"small\"\n                  background=\"#FFC0CB\"\n                  round=\"medium\"\n                  margin=\"small\"\n                >\n                  <Search size={24} color=\"#222222\" strokeWidth={1.5} />\n\n                  {/* \n                  {value.length === 0 ? (\n                    <Search size={24} color=\"#222222\" strokeWidth={1.5} />\n                  ) : (\n                    <X\n                      onClick={() => {\n                        setValue(\"\");\n                      }}\n                    />\n                  )} */}\n                </Box>\n              </Row>\n            </Col>\n          </Row>\n        </Grid>\n      </Box>\n      {suggestionOpen && (\n        <Box\n          width=\"xlarge\"\n          margin={{ vertical: \"small\" }}\n          pad={{ vertical: \"medium\", horizontal: \"large\" }}\n          border={{\n            color: \"#FFC0CB\",\n            size: \"small\",\n            style: \"solid\",\n            side: \"all\",\n          }}\n          round=\"large\"\n        >\n          <Row>\n            {suggestionsType === \"cities\" && <>{renderCities}</>}\n            {suggestionsType === \"mediums\" && <>{renderMediums}</>}\n            {/* {suggestionsType === \"times\" && <>{suggestionsTimes}</>} */}\n          </Row>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}