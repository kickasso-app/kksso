{"ast":null,"code":"import _objectDestructuringEmpty from \"/home/you/Code/github/kksso/kksso-next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nimport { useDocument } from \"react-firebase-hooks/firestore\"; // import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport { ChevronLeft, Disc } from \"react-feather\"; // import EmailForm from \"Components/EmailForm\";\n// // import ImagesCarousel from \"Components/ImagesCarousel\";\n\nimport \"./index.module.scss\";\n\nvar Studio = function Studio(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var pid = router.query.pid;\n  var paragraphSeperator = \"\\\\\";\n\n  var makeParagraphs = function makeParagraphs(paragraphString, pSeparator) {\n    return paragraphString.split(pSeparator).map(function (paragraph, index) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, paragraph) // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n      ;\n    });\n  };\n\n  var makeImagesArray = function makeImagesArray() {\n    var imgUrls = images !== undefined && images.split(\",\").map(function (imgId) {\n      return \"/img/\" + artist + \"/\" + imgId + \".jpg\";\n    });\n    var imgTexts = imagesText !== undefined && imagesText.split(\";\");\n    var imgs = imgUrls.reduce(function (acc, current, index) {\n      acc.push({\n        url: imgUrls[index],\n        caption: imgTexts[index] || \"\"\n      });\n      return acc;\n    }, []);\n    return imgs;\n  };\n\n  return __jsx(Grid, {\n    fluid: true,\n    className: \"article-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    className: \"pinklink\",\n    to: \"/studios/\",\n    onClick: function onClick() {\n      return closeArticle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(ChevronLeft, {\n    size: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), \" BACK\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, artist), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), makeParagraphs(artistText, paragraphSeperator), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Mediums\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, styles), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Studio\"), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Disc, {\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#7fffd4\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), \" \", city), makeParagraphs(studioText, paragraphSeperator)), __jsx(Col, {\n    xs: 12,\n    md: 5,\n    mdOffset: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, dates && __jsx(React.Fragment, null, rules.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, artist.split(\" \")[0], \"'s Visit Rules\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, rules.split(\";\").map(function (rule, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }, rule);\n  }))), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"General Visit Tips\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Show up on time\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Ask before taking photos of the artist and artworks\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"A gift is almost always a nice touch\"))))))));\n};\n\n_s(Studio, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Studio;\nStudio.propTypes = {//   article: PropTypes.shape({\n  //     id: PropTypes.string.isRequired,\n  //     dates: PropTypes.string.isRequired,\n  //     styles: PropTypes.string.isRequired,\n  //     city: PropTypes.string.isRequired,\n  //     rules: PropTypes.string.isRequired,\n  //     artistText: PropTypes.string.isRequired,\n  //     studioText: PropTypes.string.isRequired,\n  //   }).isRequired,\n  //   closeArticle: PropTypes.func.isRequired,\n}; // export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio; // Studio.getInitialProps = ({ query }) => {\n//   return {\n//     id: query.id,\n//   };\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Studio\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/pages/studio/[id].js"],"names":["React","PropTypes","Link","useRouter","useDocument","Grid","Row","Col","ChevronLeft","Disc","Studio","router","pid","query","paragraphSeperator","makeParagraphs","paragraphString","pSeparator","split","map","paragraph","index","makeImagesArray","imgUrls","images","undefined","imgId","artist","imgTexts","imagesText","imgs","reduce","acc","current","push","url","caption","closeArticle","artistText","styles","city","studioText","dates","rules","length","rule","propTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\n\nimport { useDocument } from \"react-firebase-hooks/firestore\";\n\n// import ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\n\nimport { ChevronLeft, Disc } from \"react-feather\";\n\n// import EmailForm from \"Components/EmailForm\";\n// // import ImagesCarousel from \"Components/ImagesCarousel\";\nimport \"./index.module.scss\";\n\nconst Studio = (\n  {\n    //   article: {\n    //     id,\n    //     artist,\n    //     city,\n    //     styles,\n    //     dates,\n    //     images,\n    //     imagesText,\n    //     artistText,\n    //     studioText,\n    //     rules,\n    //     email,\n    //   },\n    //   closeArticle,\n  }\n) => {\n  const router = useRouter();\n  const { pid } = router.query;\n\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => (\n      <p>{paragraph}</p>\n      // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    ));\n  };\n\n  const makeImagesArray = () => {\n    const imgUrls =\n      images !== undefined &&\n      images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n\n    const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n\n    const imgs = imgUrls.reduce((acc, current, index) => {\n      acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n      return acc;\n    }, []);\n\n    return imgs;\n  };\n\n  return (\n    <Grid fluid className=\"article-open\">\n      <Col xs={12}>\n        <Link\n          className=\"pinklink\"\n          to={`/studios/`}\n          onClick={() => closeArticle()}\n        >\n          <ChevronLeft size={14} /> BACK\n        </Link>\n        <br />\n\n        {/* <ImagesCarousel images={makeImagesArray()} /> */}\n\n        <Row>\n          <Col xs={12} md={6}>\n            <br />\n\n            <h2>{artist}</h2>\n\n            <br />\n            {makeParagraphs(artistText, paragraphSeperator)}\n\n            <h3>Mediums</h3>\n            <p>{styles}</p>\n\n            <h3>Studio</h3>\n\n            <h4>\n              <Disc size={18} strokeWidth=\"2\" color=\"#7fffd4\" fill=\"#fff\" />{\" \"}\n              {city}\n            </h4>\n\n            {makeParagraphs(studioText, paragraphSeperator)}\n          </Col>\n          <Col xs={12} md={5} mdOffset={1}>\n            <Row>\n              {dates && (\n                <>\n                  {rules.length > 0 && (\n                    <>\n                      <h3>{artist.split(\" \")[0]}'s Visit Rules</h3>\n                      <br />\n                      <ul>\n                        {rules.split(\";\").map((rule, index) => (\n                          <li key={index}>{rule}</li>\n                        ))}\n                      </ul>\n                    </>\n                  )}\n                  <h3>General Visit Tips</h3>\n                  <ul>\n                    <li>Show up on time</li>\n                    <li>Ask before taking photos of the artist and artworks</li>\n                    <li>A gift is almost always a nice touch</li>\n                  </ul>\n                  {/* <EmailForm\n                    openVisitDates={dates.split(\",\")}\n                    artistEmail={email}\n                    artistName={artist}\n                  /> */}\n                </>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Grid>\n  );\n};\nStudio.propTypes = {\n  //   article: PropTypes.shape({\n  //     id: PropTypes.string.isRequired,\n  //     dates: PropTypes.string.isRequired,\n  //     styles: PropTypes.string.isRequired,\n  //     city: PropTypes.string.isRequired,\n  //     rules: PropTypes.string.isRequired,\n  //     artistText: PropTypes.string.isRequired,\n  //     studioText: PropTypes.string.isRequired,\n  //   }).isRequired,\n  //   closeArticle: PropTypes.func.isRequired,\n};\n\n// export const getServerSideProps = async ({ query }) => {\n//   const content = {}\n\n//   const [value, loading, error] = useDocument(\n//     firebase.firestore().doc('hooks/nBShXiRGFAhuiPfBaGpt'),\n//     {\n//       snapshotListenOptions: { includeMetadataChanges: true },\n//     }\n//   );\n\n//   await fire.firestore()\n//     .collection('blog')\n//     .doc(query.id)\n//     .get()\n//     .then(result => {\n//       content['title'] = result.data().title;\n//       content['content'] = result.data().content;\n//     });\n// return {\n//     props: {\n//       title: content.title,\n//       content: content.content,\n//     }\n//   }\n// }\n\nexport default Studio;\n\n// Studio.getInitialProps = ({ query }) => {\n//   return {\n//     id: query.id,\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}