{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/you/Code/github/kksso/kksso-next/pages/studio/[slug].js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport ImagesCarousel from \"Components/ImagesCarousel\";\nimport { ChevronLeft, Disc } from \"react-feather\";\nimport EmailForm from \"Components/EmailForm\";\nimport \"./index.module.scss\";\n\nvar StudioOpen = function StudioOpen(_ref) {\n  var _ref$article = _ref.article,\n      id = _ref$article.id,\n      artist = _ref$article.artist,\n      city = _ref$article.city,\n      styles = _ref$article.styles,\n      dates = _ref$article.dates,\n      images = _ref$article.images,\n      imagesText = _ref$article.imagesText,\n      artistText = _ref$article.artistText,\n      studioText = _ref$article.studioText,\n      rules = _ref$article.rules,\n      email = _ref$article.email,\n      closeArticle = _ref.closeArticle;\n  // const createMarkup = (raw) => {\n  //   return { __html: raw };\n  // };\n  var paragraphSeperator = \"\\\\\";\n\n  var makeParagraphs = function makeParagraphs(paragraphString, pSeparator) {\n    return paragraphString.split(pSeparator).map(function (paragraph, index) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, paragraph) // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n      ;\n    });\n  };\n\n  var makeImagesArray = function makeImagesArray() {\n    var imgUrls = images !== undefined && images.split(\",\").map(function (imgId) {\n      return \"/img/\" + artist + \"/\" + imgId + \".jpg\";\n    });\n    var imgTexts = imagesText !== undefined && imagesText.split(\";\");\n    var imgs = imgUrls.reduce(function (acc, current, index) {\n      acc.push({\n        url: imgUrls[index],\n        caption: imgTexts[index] || \"\"\n      });\n      return acc;\n    }, []);\n    return imgs;\n  };\n\n  return __jsx(Grid, {\n    fluid: true,\n    className: \"article-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    className: \"pinklink\",\n    to: \"/studios/\",\n    onClick: function onClick() {\n      return closeArticle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(ChevronLeft, {\n    size: 14,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), \" BACK\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, artist), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), makeParagraphs(artistText, paragraphSeperator), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Mediums\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, styles), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Studio\"), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Disc, {\n    size: 18,\n    strokeWidth: \"2\",\n    color: \"#7fffd4\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), \" \", city), makeParagraphs(studioText, paragraphSeperator)), __jsx(Col, {\n    xs: 12,\n    md: 5,\n    mdOffset: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, dates && __jsx(React.Fragment, null, rules.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, artist.split(\" \")[0], \"'s Visit Rules\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, rules.split(\";\").map(function (rule, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }\n    }, rule);\n  }))), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"General Visit Tips\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Show up on time\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Ask before taking photos of the artist and artworks\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"A gift is almost always a nice touch\"))))))));\n};\n\n_c = StudioOpen;\nStudio.propTypes = {\n  article: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    dates: PropTypes.string.isRequired,\n    styles: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    rules: PropTypes.string.isRequired,\n    artistText: PropTypes.string.isRequired,\n    studioText: PropTypes.string.isRequired\n  }).isRequired,\n  closeArticle: PropTypes.func.isRequired\n};\nexport default Studio;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudioOpen\");","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/pages/studio/[slug].js"],"names":["React","PropTypes","Link","ReactMarkdown","Grid","Row","Col","ImagesCarousel","ChevronLeft","Disc","EmailForm","StudioOpen","article","id","artist","city","styles","dates","images","imagesText","artistText","studioText","rules","email","closeArticle","paragraphSeperator","makeParagraphs","paragraphString","pSeparator","split","map","paragraph","index","makeImagesArray","imgUrls","undefined","imgId","imgTexts","imgs","reduce","acc","current","push","url","caption","length","rule","Studio","propTypes","shape","string","isRequired","func"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,4CAA/B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,eAAlC;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAO,qBAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAeb;AAAA,0BAdJC,OAcI;AAAA,MAbFC,EAaE,gBAbFA,EAaE;AAAA,MAZFC,MAYE,gBAZFA,MAYE;AAAA,MAXFC,IAWE,gBAXFA,IAWE;AAAA,MAVFC,MAUE,gBAVFA,MAUE;AAAA,MATFC,KASE,gBATFA,KASE;AAAA,MARFC,MAQE,gBARFA,MAQE;AAAA,MAPFC,UAOE,gBAPFA,UAOE;AAAA,MANFC,UAME,gBANFA,UAME;AAAA,MALFC,UAKE,gBALFA,UAKE;AAAA,MAJFC,KAIE,gBAJFA,KAIE;AAAA,MAHFC,KAGE,gBAHFA,KAGE;AAAA,MADJC,YACI,QADJA,YACI;AACJ;AACA;AACA;AAEA,MAAMC,kBAAkB,GAAG,IAA3B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD,EAAkBC,UAAlB,EAAiC;AACtD,WAAOD,eAAe,CAACE,KAAhB,CAAsBD,UAAtB,EAAkCE,GAAlC,CAAsC,UAACC,SAAD,EAAYC,KAAZ;AAAA,aAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,SAAJ,CAD2C,CAE3C;AAF2C;AAAA,KAAtC,CAAP;AAID,GALD;;AAOA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAMC,OAAO,GACXhB,MAAM,KAAKiB,SAAX,IACAjB,MAAM,CAACW,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsB,UAACM,KAAD;AAAA,aAAW,UAAUtB,MAAV,GAAmB,GAAnB,GAAyBsB,KAAzB,GAAiC,MAA5C;AAAA,KAAtB,CAFF;AAIA,QAAMC,QAAQ,GAAGlB,UAAU,KAAKgB,SAAf,IAA4BhB,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAA7C;AAEA,QAAMS,IAAI,GAAGJ,OAAO,CAACK,MAAR,CAAe,UAACC,GAAD,EAAMC,OAAN,EAAeT,KAAf,EAAyB;AACnDQ,MAAAA,GAAG,CAACE,IAAJ,CAAS;AAAEC,QAAAA,GAAG,EAAET,OAAO,CAACF,KAAD,CAAd;AAAuBY,QAAAA,OAAO,EAAEP,QAAQ,CAACL,KAAD,CAAR,IAAmB;AAAnD,OAAT;AACA,aAAOQ,GAAP;AACD,KAHY,EAGV,EAHU,CAAb;AAKA,WAAOF,IAAP;AACD,GAbD;;AAeA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,EAAE,aAFJ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMd,YAAY,EAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,UADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,MAAL,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGY,cAAc,CAACN,UAAD,EAAaK,kBAAb,CANjB,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,MAAJ,CATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,WAAW,EAAC,GAA5B;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACiE,GADjE,EAEGD,IAFH,CAbF,EAkBGW,cAAc,CAACL,UAAD,EAAaI,kBAAb,CAlBjB,CADF,EAqBE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,QAAQ,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,IACJ,4BACGK,KAAK,CAACuB,MAAN,GAAe,CAAf,IACC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK/B,MAAM,CAACe,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAL,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACgB,IAAD,EAAOd,KAAP;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBc,IAAjB,CADoB;AAAA,GAArB,CADH,CAHF,CAFJ,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHF,CAbF,CAFJ,CADF,CArBF,CAZF,CADF,CADF;AAqED,CAjHD;;KAAMnC,U;AAkHNoC,MAAM,CAACC,SAAP,GAAmB;AACjBpC,EAAAA,OAAO,EAAEX,SAAS,CAACgD,KAAV,CAAgB;AACvBpC,IAAAA,EAAE,EAAEZ,SAAS,CAACiD,MAAV,CAAiBC,UADE;AAEvBlC,IAAAA,KAAK,EAAEhB,SAAS,CAACiD,MAAV,CAAiBC,UAFD;AAGvBnC,IAAAA,MAAM,EAAEf,SAAS,CAACiD,MAAV,CAAiBC,UAHF;AAIvBpC,IAAAA,IAAI,EAAEd,SAAS,CAACiD,MAAV,CAAiBC,UAJA;AAKvB7B,IAAAA,KAAK,EAAErB,SAAS,CAACiD,MAAV,CAAiBC,UALD;AAMvB/B,IAAAA,UAAU,EAAEnB,SAAS,CAACiD,MAAV,CAAiBC,UANN;AAOvB9B,IAAAA,UAAU,EAAEpB,SAAS,CAACiD,MAAV,CAAiBC;AAPN,GAAhB,EAQNA,UATc;AAUjB3B,EAAAA,YAAY,EAAEvB,SAAS,CAACmD,IAAV,CAAeD;AAVZ,CAAnB;AAaA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport { Grid, Row, Col } from \"react-flexbox-grid/dist/react-flexbox-grid\";\nimport ImagesCarousel from \"Components/ImagesCarousel\";\nimport { ChevronLeft, Disc } from \"react-feather\";\n\nimport EmailForm from \"Components/EmailForm\";\n\nimport \"./index.module.scss\";\n\nconst StudioOpen = ({\n  article: {\n    id,\n    artist,\n    city,\n    styles,\n    dates,\n    images,\n    imagesText,\n    artistText,\n    studioText,\n    rules,\n    email,\n  },\n  closeArticle,\n}) => {\n  // const createMarkup = (raw) => {\n  //   return { __html: raw };\n  // };\n\n  const paragraphSeperator = \"\\\\\";\n\n  const makeParagraphs = (paragraphString, pSeparator) => {\n    return paragraphString.split(pSeparator).map((paragraph, index) => (\n      <p>{paragraph}</p>\n      // <ReactMarkdown key={index}>{paragraph}</ReactMarkdown>\n    ));\n  };\n\n  const makeImagesArray = () => {\n    const imgUrls =\n      images !== undefined &&\n      images.split(\",\").map((imgId) => \"/img/\" + artist + \"/\" + imgId + \".jpg\");\n\n    const imgTexts = imagesText !== undefined && imagesText.split(\";\");\n\n    const imgs = imgUrls.reduce((acc, current, index) => {\n      acc.push({ url: imgUrls[index], caption: imgTexts[index] || \"\" });\n      return acc;\n    }, []);\n\n    return imgs;\n  };\n\n  return (\n    <Grid fluid className=\"article-open\">\n      <Col xs={12}>\n        <Link\n          className=\"pinklink\"\n          to={`/studios/`}\n          onClick={() => closeArticle()}\n        >\n          <ChevronLeft size={14} /> BACK\n        </Link>\n        <br />\n\n        {/* <ImagesCarousel images={makeImagesArray()} /> */}\n\n        <Row>\n          <Col xs={12} md={6}>\n            <br />\n\n            <h2>{artist}</h2>\n\n            <br />\n            {makeParagraphs(artistText, paragraphSeperator)}\n\n            <h3>Mediums</h3>\n            <p>{styles}</p>\n\n            <h3>Studio</h3>\n\n            <h4>\n              <Disc size={18} strokeWidth=\"2\" color=\"#7fffd4\" fill=\"#fff\" />{\" \"}\n              {city}\n            </h4>\n\n            {makeParagraphs(studioText, paragraphSeperator)}\n          </Col>\n          <Col xs={12} md={5} mdOffset={1}>\n            <Row>\n              {dates && (\n                <>\n                  {rules.length > 0 && (\n                    <>\n                      <h3>{artist.split(\" \")[0]}'s Visit Rules</h3>\n                      <br />\n                      <ul>\n                        {rules.split(\";\").map((rule, index) => (\n                          <li key={index}>{rule}</li>\n                        ))}\n                      </ul>\n                    </>\n                  )}\n                  <h3>General Visit Tips</h3>\n                  <ul>\n                    <li>Show up on time</li>\n                    <li>Ask before taking photos of the artist and artworks</li>\n                    <li>A gift is almost always a nice touch</li>\n                  </ul>\n                  {/* <EmailForm\n                    openVisitDates={dates.split(\",\")}\n                    artistEmail={email}\n                    artistName={artist}\n                  /> */}\n                </>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Grid>\n  );\n};\nStudio.propTypes = {\n  article: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    dates: PropTypes.string.isRequired,\n    styles: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    rules: PropTypes.string.isRequired,\n    artistText: PropTypes.string.isRequired,\n    studioText: PropTypes.string.isRequired,\n  }).isRequired,\n  closeArticle: PropTypes.func.isRequired,\n};\n\nexport default Studio;\n"]},"metadata":{},"sourceType":"module"}