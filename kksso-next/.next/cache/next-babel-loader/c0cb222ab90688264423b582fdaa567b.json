{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\nimport moment from \"moment\"; // import {\n//   dayButtons,\n//   dayValues,\n//   cityValues,\n//   categoryButtons,\n// } from \"../../config/filters\";\n\nvar filterStudios = function filterStudios(_ref) {\n  var articles = _ref.articles,\n      filters = _ref.filters;\n  var filtered = articles;\n  var today = moment();\n  var nextWeek = moment().add(7, \"days\");\n  var nextMonth = moment().add(1, \"months\");\n  var nextYear = moment().add(1, \"years\");\n\n  if (filters.day !== false && filters.day !== \"All\") {\n    filtered = filtered.filter(function (article) {\n      var datesArray = article.dates.map(function (d) {\n        return d.toDate();\n      });\n      var dates = datesArray.map(function (d) {\n        return moment(d, \"DD/MM/YYYY hh:mm\");\n      });\n      var isNextWeek = dates.some(function (d) {\n        return d.isBetween(today, nextWeek);\n      });\n      var isNextMonth = dates.some(function (d) {\n        return d.isBetween(today, nextMonth);\n      });\n      var isLater = dates.some(function (d) {\n        return d.isBetween(nextMonth, nextYear);\n      });\n      var result = isNextWeek ? \"week \" : \"\";\n      result += isNextMonth ? \"month \" : \"\";\n      result += isLater ? \"later\" : \"\";\n      return result.includes(filters.day);\n    });\n  }\n\n  if (filters.cat !== false && filters.cat !== \"All\") {\n    filtered = filtered.filter(function (article) {\n      var style = filters.cat.toLowerCase();\n      return article.styles.includes(style);\n    });\n  }\n\n  if (filters.city !== false && filters.city !== \"All\") {\n    filtered = filtered.filter(function (article) {\n      return article.city.includes(filters.city);\n    });\n  } // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n\n\n  return filtered;\n}; // load filters from sessionStorage\n// useEffect(() => {\n//     // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n//     //   openArticle(articleIDRoute);\n//     // }\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterArticles(savedfilters);\n//     // } else {\n//     //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n//     // }\n//     filterArticles({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [articles]);\n\n\nexport default filterStudios;","map":{"version":3,"sources":["/home/you/Code/github/kksso/kksso-next/components/StudiosFilter/filterStudios.js"],"names":["moment","filterStudios","articles","filters","filtered","today","nextWeek","add","nextMonth","nextYear","day","filter","article","datesArray","dates","map","d","toDate","isNextWeek","some","isBetween","isNextMonth","isLater","result","includes","cat","style","toLowerCase","styles","city"],"mappings":"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","sourcesContent":["// import { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport moment from \"moment\";\n\n// import {\n//   dayButtons,\n//   dayValues,\n//   cityValues,\n//   categoryButtons,\n// } from \"../../config/filters\";\n\nconst filterStudios = ({ articles, filters }) => {\n  let filtered = articles;\n  const today = moment();\n  const nextWeek = moment().add(7, \"days\");\n  const nextMonth = moment().add(1, \"months\");\n  const nextYear = moment().add(1, \"years\");\n\n  if (filters.day !== false && filters.day !== \"All\") {\n    filtered = filtered.filter((article) => {\n      const datesArray = article.dates.map((d) => d.toDate());\n      const dates = datesArray.map((d) => moment(d, \"DD/MM/YYYY hh:mm\"));\n\n      const isNextWeek = dates.some((d) => d.isBetween(today, nextWeek));\n      const isNextMonth = dates.some((d) => d.isBetween(today, nextMonth));\n      const isLater = dates.some((d) => d.isBetween(nextMonth, nextYear));\n\n      let result = isNextWeek ? \"week \" : \"\";\n      result += isNextMonth ? \"month \" : \"\";\n      result += isLater ? \"later\" : \"\";\n\n      return result.includes(filters.day);\n    });\n  }\n  if (filters.cat !== false && filters.cat !== \"All\") {\n    filtered = filtered.filter((article) => {\n      const style = filters.cat.toLowerCase();\n      return article.styles.includes(style);\n    });\n  }\n  if (filters.city !== false && filters.city !== \"All\") {\n    filtered = filtered.filter((article) => {\n      return article.city.includes(filters.city);\n    });\n  }\n\n  // sessionStorage.setItem(\"filters\", JSON.stringify(filters));\n\n  return filtered;\n};\n\n// load filters from sessionStorage\n// useEffect(() => {\n//     // if (articleIDRoute > 0 && articleIDRoute <= articles.length) {\n//     //   openArticle(articleIDRoute);\n//     // }\n\n//     // let savedfilters = sessionStorage.getItem(\"filters\");\n//     // if (savedfilters) {\n//     //   savedfilters = JSON.parse(savedfilters);\n//     //   setTheDay(savedfilters.day);\n//     //   setTheCat(savedfilters.cat);\n//     //   setTheCity(savedfilters.city);\n//     //   filterArticles(savedfilters);\n//     // } else {\n//     //   filterArticles({ day: theDay, cat: theCat, city: theCity });\n//     // }\n\n//     filterArticles({ day: theDay, cat: theCat, city: theCity });\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [articles]);\n\nexport default filterStudios;\n"]},"metadata":{},"sourceType":"module"}